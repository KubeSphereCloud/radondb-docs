
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  [{"content":" RadonDB DMP 是青云科技全新发布的企业级云原生数据库管理平台。在 KubeSphere LuBan 云原生可扩展开放架构之上，RadonDB DMP 能轻松实现多类型主流数据库的跨云部署、多云管理、智能观测与统一运维等，并完整构建围绕高性能、高可用、业务追踪、数据流转等场景下的生态闭环，助力客户真正实现数据库即服务。\nRadonDB DMP 提供一站式、可视化的云原生数据库全生命周期管理。支持一键部署数据库，统一管理所有数据库实例，快速定位潜在风险和故障，并即时监测全局指标状态，提高数据库管理效率。\n备注 在 KubeSphere 企业版 v4.0 及之后的版本中，RadonDB DMP 数据库管理平台是一个独立的扩展组件，需要在扩展市场（KubeSphere Marketplace）订阅安装后才能使用。\n有关更多信息，请参阅 KubeSphere 企业版使用文档的扩展组件管理章节。\n","href":"/v2.0/01-intro/01-overview/","isSection":null,"linkkey":null,"title":"产品概述"},{"content":" 本节介绍 RadonDB DMP 数据库管理平台的产品特性，以及如何在 KubeSphere 企业版 Web 控制台访问“数据库管理平台”。\n产品版本 本⽂档适⽤于 KubeSphere 企业版 v4.0 及之后的版本。\n读者对象 本文档主要适用于以下读者：\nKubeSphere 企业版用户\n交付工程师\n运维工程师\n售后工程师\n","href":"/v2.0/01-intro/","isSection":null,"linkkey":null,"title":"产品简介"},{"content":" 本节介绍如何创建 Kafka 用户。\n前提条件 RadonDB Kafka 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击 Kafka 用户页签，然后点击创建。\n在创建用户对话框，设置用户名和密码，然后点击确定。用户创建完成后将显示在用户列表中。\n参数 描述 用户名\n自定义用户名称。\n配置要求：只能包含小写字母、数字和连字符（_），最长 64 个字符。\n认证模式\nKafka 的认证模式。支持 TLS 和 SCRAM-SHA-512。\n授权模式\n目前只支持简单授权。\n权限规则 1\nKafka 上执行操作所需的用户权限。点击添加以添加多个权限规则。\n资源类型：规则适用的资源类型，支持主题、组、集群和事务 ID。\n资源匹配模式：资源名称的匹配模式，支持前缀匹配和逐字匹配。\n资源名称：资源的名称。\n操作：选择规则适用的操作。\n类型：目前规则类型只支持允许。\n在用户列表页面，将鼠标悬浮在加密密钥列的 CA 证书上，您可以下载证书，复制密码，并查看证书有效期。\n","href":"/v2.0/10-radondb-kafka/04-manage-database-users/01-create-a-database-user/","isSection":null,"linkkey":null,"title":"创建 Kafka 用户"},{"content":" 本节介绍如何在 DMP 数据库管理平台上创建 RadonDB MongoDB 实例。\n前提条件 在 KubeSphere 企业版平台加入一个项目。\nKubeSphere 企业版平台需要安装“数据库管理平台”扩展组件。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MongoDB。\n在页面右侧选择新建 MongoDB 实例。\n在基本信息页签，设置 RadonDB MongoDB 实例的基本信息和位置，然后点击下一步。\n参数 描述 名称\nMongoDB 实例的名称。名称只能包含小写字母、数字和连字符（-），必须以小写字母开头并以小写字母或数字结尾，最长 32 个字符。\n描述\nMongoDB 实例的描述信息。描述可包含任意字符，最长 256 个字符。\n位置\nMongoDB 实例所属的企业空间和项目。\n在应用设置页签，设置 MongoDB 实例的参数。\n参数 描述 版本\nMongoDB 应用的版本。\n内核版本\nMongoDB 数据库的内核版本。\n资源\n为每个节点预留的 CPU 和内存资源，同时也是每个节点可使用的 CPU 和内存资源上限。\n存储类\nMongoDB 数据库使用的存储系统对应的存储类。如果下拉列表中没有符合需要的存储类，请联系平台管理员创建存储类。\n卷\n每个节点使用的卷大小，单位为 GiB。\n节点数量\nMongoDB 实例的节点数量。参数值可以为 1、3、5、7。\n密码\nMongoDB 数据库的访问密码。密码只能包含大写字母、小写字母、数字，长度为 6 到 31 个字符。\n点击高级设置，启用或禁用反亲和性配置和 node 亲和设置。\n设置 描述 反亲和性配置\n开启反亲和性配置后， pod 将必须调度到不同的物理节点。\nnode 亲和设置\n开启 node 亲和设置后，添加匹配 Node 的键值对，可以将 pod 部署在特定条件的 node 上。\n点击添加可以设置多个键值对。\n在已添加的键值对右侧点击可删除键值对。\n提示 您还可以打开应用设置页签右上角的编辑 YAML，在 yaml 文件中自定义配置。\n点击确定。RadonDB MongoDB 实例创建后，将显示在 MongoDB 页面的实例列表中。\n","href":"/v2.0/07-radondb-mongodb/01-install-radondb-mongodb/","isSection":null,"linkkey":null,"title":"创建 MongoDB 实例"},{"content":" 本节介绍如何在 DMP 数据库管理平台上创建 RadonDB MySQL 实例。\n前提条件 在 KubeSphere 企业版平台加入一个项目。\nKubeSphere 企业版平台需要安装“数据库管理平台”扩展组件。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在页面右侧选择新建 MySQL 实例。\n在基本信息页签，设置 RadonDB MySQL 实例的基本信息和位置，然后点击下一步。\n参数 描述 名称\nMySQL 实例的名称。名称只能包含小写字母、数字和连字符（-），必须以小写字母开头并以小写字母或数字结尾，最长 32 个字符。\n描述\nMySQL 实例的描述信息。描述可包含任意字符，最长 256 个字符。\n位置\nMySQL 实例所属的企业空间和项目。\n在应用设置页签，设置 MySQL 实例的参数。\n参数 描述 版本\nMySQL 应用的版本。\n内核版本\nMySQL 数据库的内核版本。\n资源\n为每个节点预留的 CPU 和内存资源，同时也是每个节点可使用的 CPU 和内存资源上限。\n存储类\nMySQL 数据库使用的存储系统对应的存储类。如果下拉列表中没有符合需要的存储类，请联系平台管理员创建存储类。\n卷\n每个节点使用的卷大小，单位为 GiB。\n备数据库\n用于确保高可用性的备数据库的数量，取值可以为 1、2 或 4。\n点击高级设置，启用或禁用反亲和性配置和 node 亲和设置。\n设置 描述 反亲和性配置\n开启反亲和性配置后， pod 将必须调度到不同的物理节点。\nnode 亲和设置\n开启 node 亲和设置后，添加匹配 Node 的键值对，可以将 pod 部署在特定条件的 node 上。\n点击添加可以设置多个键值对。\n在已添加的键值对右侧点击可删除键值对。\n提示 您还可以打开应用设置页签右上角的编辑 YAML，在 yaml 文件中自定义配置。\n点击确定。RadonDB MySQL 实例创建后，将显示在 MySQL 页面的实例列表中。\n","href":"/v2.0/02-radondb-mysql/01-install-radondb-mysql/","isSection":null,"linkkey":null,"title":"创建 MySQL 实例"},{"content":" 本节介绍如何在 DMP 数据库管理平台上创建 RadonDB OpenSearch 实例。\n前提条件 在 KubeSphere 企业版平台加入一个项目。\nKubeSphere 企业版平台需要安装“数据库管理平台”扩展组件。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 OpenSearch。\n在页面右侧选择新建 OpenSearch 实例。\n在基本信息页签，设置 RadonDB OpenSearch 实例的基本信息和位置，然后点击下一步。\n参数 描述 名称\nOpenSearch 实例的名称。名称只能包含小写字母、数字和连字符（-），必须以小写字母开头并以小写字母或数字结尾，最长 32 个字符。\n描述\nOpenSearch 实例的描述信息。描述可包含任意字符，最长 256 个字符。\n位置\nOpenSearch 实例所属的企业空间和项目。\n在应用设置页签，设置 OpenSearch 实例的参数。\n参数 描述 版本\nOpenSearch 应用的版本。\n内核版本\nOpenSearch 数据库的内核版本。\n主节点/热节点/温节点/冷节点/控制面板节点/Logstash 节点设置\n资源：分配给每个节点的 CPU 和内存资源。\n主节点/热节点/温节点/冷节点/控制面板节点/Logstash 节点数量：OpenSearch 实例各类型节点的数量。主节点的数量默认为 3 且不能修改，其他节点数量可根据需要设置。\n存储类：节点使用的存储系统对应的存储类。默认值为 local。如果下拉列表中没有符合需要的存储类，请联系平台管理员创建存储类。\n卷：每个节点使用的卷大小，单位为 GiB。每个主节点的卷大小默认为 20 GiB。控制面板节点和 Logstash 节点不能挂载卷。其他节点的卷大小可根据需要设置。\n点击高级设置，设置数据库的⽤⼾名和密码（默认用户名为 admin，密码为 RadonDB@123），启用或禁用反亲和性配置和 node 亲和设置。\n设置 描述 反亲和性配置\n开启反亲和性配置后， pod 将必须调度到不同的物理节点。\nnode 亲和设置\n开启 node 亲和设置后，添加匹配 Node 的键值对，可以将 pod 部署在特定条件的 node 上。\n点击添加可以设置多个键值对。\n在已添加的键值对右侧点击可删除键值对。\n提示 您还可以打开应用设置页签右上角的编辑 YAML，在 yaml 文件中自定义配置。\n点击确定。RadonDB OpenSearch 实例创建后，将显示在 OpenSearch 页面的实例列表中。\n","href":"/v2.0/04-radondb-opensearch/01-install-radondb-opensearch/","isSection":null,"linkkey":null,"title":"创建 OpenSearch 实例"},{"content":" 本节介绍如何在 DMP 数据库管理平台上创建 RadonDB PostgreSQL 实例。\n前提条件 在 KubeSphere 企业版平台加入一个项目。\nKubeSphere 企业版平台需要安装“数据库管理平台”扩展组件。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在页面右侧选择新建 PostgreSQL 实例。\n在基本信息页签，设置 RadonDB PostgreSQL 实例的基本信息和位置，然后点击下一步。\n参数 描述 名称\nPostgreSQL 实例的名称。名称只能包含小写字母、数字和连字符（-），必须以小写字母开头并以小写字母或数字结尾，最长 32 个字符。\n描述\nPostgreSQL 实例的描述信息。描述可包含任意字符，最长 256 个字符。\n位置\nPostgreSQL 实例所属的企业空间和项目。\n在应用设置页签，设置 PostgreSQL 实例的参数。\n参数 描述 版本\nPostgreSQL 应用的版本。\n内核版本\nPostgreSQL 数据库的内核版本。\n资源\n为每个节点预留的 CPU 和内存资源，同时也是每个节点可使用的 CPU 和内存资源上限。\n存储类\nPostgreSQL 数据库使用的存储系统对应的存储类。如果下拉列表中没有符合需要的存储类，请联系平台管理员创建存储类。\n卷\n每个节点使用的卷大小，单位为 GiB。\n数据节点数量\nPostgreSQL 实例的数据节点数量。取值范围为 2 到 8。\n提示 您还可以打开应用设置页签右上角的编辑 YAML，在 yaml 文件中自定义配置。\n点击确定。RadonDB PostgreSQL 实例创建后，将显示在 PostgreSQL 页面的实例列表中。\n","href":"/v2.0/08-radondb-postgresql/01-install-radondb-postgresql/","isSection":null,"linkkey":null,"title":"创建 PostgreSQL 实例"},{"content":" 本节介绍如何在 DMP 数据库管理平台上创建 RadonDB RabbitMQ 实例。\n前提条件 在 KubeSphere 企业版平台加入一个项目。\nKubeSphere 企业版平台需要安装“数据库管理平台”扩展组件。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 RabbitMQ。\n在页面右侧选择新建 RabbitMQ 实例。\n在基本信息页签，设置 RadonDB RabbitMQ 实例的基本信息和位置，然后点击下一步。\n参数 描述 名称\nRabbitMQ 实例的名称。名称只能包含小写字母、数字和连字符（-），必须以小写字母开头并以小写字母或数字结尾，最长 32 个字符。\n描述\nRabbitMQ 实例的描述信息。描述可包含任意字符，最长 256 个字符。\n位置\nRabbitMQ 实例所属的企业空间和项目。\n在应用设置页签，设置 RabbitMQ 实例的参数。\n参数 描述 版本\nRabbitMQ 应用的版本。\n内核版本\nRabbitMQ 的内核版本。\n资源\n为每个节点预留的 CPU 和内存资源，同时也是每个节点可使用的 CPU 和内存资源上限。\n存储类\nRabbitMQ 使用的存储系统对应的存储类。如果下拉列表中没有符合需要的存储类，请联系平台管理员创建存储类。\n卷\n每个节点使用的卷大小，单位为 GiB。\n节点数量\nRabbitMQ 的节点数量。参数值可以为 1、3、5、7。\n点击高级设置，启用或禁用反亲和性配置和 node 亲和设置。\n设置 描述 反亲和性配置\n开启反亲和性配置后， pod 将必须调度到不同的物理节点。\nnode 亲和设置\n开启 node 亲和设置后，添加匹配 Node 的键值对，可以将 pod 部署在特定条件的 node 上。\n点击添加可以设置多个键值对。\n在已添加的键值对右侧点击可删除键值对。\n提示 您还可以打开应用设置页签右上角的编辑 YAML，在 yaml 文件中自定义配置。\n点击确定。RadonDB RabbitMQ 实例创建后，将显示在 RabbitMQ 页面的实例列表中。\n","href":"/v2.0/11-radondb-rabbitmq/01-install-radondb-rabbitmq/","isSection":null,"linkkey":null,"title":"创建 RabbitMQ 实例"},{"content":" 本节介绍如何在 DMP 数据库管理平台上创建 RadonDB Redis Cluster 实例。\n前提条件 在 KubeSphere 企业版平台加入一个项目。\nKubeSphere 企业版平台需要安装“数据库管理平台”扩展组件。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Cluster。\n在页面右侧选择新建 Redis Cluster 实例。\n在基本信息页签，设置 RadonDB Redis Cluster 实例的基本信息和位置，然后点击下一步。\n参数 描述 名称\nRedis Cluster 实例的名称。名称只能包含小写字母、数字和连字符（-），必须以小写字母开头并以小写字母或数字结尾，最长 32 个字符。\n描述\nRedis Cluster 实例的描述信息。描述可包含任意字符，最长 256 个字符。\n位置\nRedis Cluster 实例所属的企业空间和项目。\n在应用设置页签，设置 Redis Cluster 实例的参数。\n参数 描述 版本\nRedis Cluster 应用的版本。\n内核版本\nRedis Cluster 数据库的内核版本。\nCPU/内存\n为每个节点预留的 CPU 和内存资源，同时也是每个节点可使用的 CPU 和内存资源上限。\n存储类\nRedis Cluster 数据库使用的存储系统对应的存储类。如果下拉列表中没有符合需要的存储类，请联系平台管理员创建存储类。\n卷\n每个节点使用的卷大小，单位为 GiB。\n分片数量\nRedis Cluster 实例的代理节点数量。取值范围为 3 到 50。\n密码\nRedis Cluster 数据库的访问密码。密码只能包含大写字母、小写字母、数字和特殊字符（!$%^\u0026amp;*().;），长度为 6 到 31 个字符。\n点击高级设置，启用或禁用外部访问、反亲和性配置和 node 亲和设置。\n设置 描述 外部访问\n启用外部访问后，可以使用域名从 KubeSphere 集群外部访问数据库分片。\n反亲和性配置\n开启反亲和性配置后， pod 将必须调度到不同的物理节点。\nnode 亲和设置\n开启 node 亲和设置后，添加匹配 Node 的键值对，可以将 pod 部署在特定条件的 node 上。\n点击添加可以设置多个键值对。\n在已添加的键值对右侧点击可删除键值对。\n提示 您还可以打开应用设置页签右上角的编辑 YAML，在 yaml 文件中自定义配置。\n点击确定。RadonDB Redis Cluster 实例创建后，将显示在 Redis Cluster 页面的实例列表中。\n","href":"/v2.0/05-radondb-redis-cluster/01-install-radondb-redis-cluster/","isSection":null,"linkkey":null,"title":"创建 Redis Cluster 实例"},{"content":" 本节介绍如何在 DMP 数据库管理平台上创建 RadonDB Redis Sentinel 实例。\n前提条件 在 KubeSphere 企业版平台加入一个项目。\nKubeSphere 企业版平台需要安装“数据库管理平台”扩展组件。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Sentinel。\n在页面右侧选择新建 Redis Sentinel 实例。\n在基本信息页签，设置 RadonDB Redis Sentinel 实例的基本信息和位置，然后点击下一步。\n参数 描述 名称\nRedis Sentinel 实例的名称。名称只能包含小写字母、数字和连字符（-），必须以小写字母开头并以小写字母或数字结尾，最长 32 个字符。\n描述\nRedis Sentinel 实例的描述信息。描述可包含任意字符，最长 256 个字符。\n位置\nRadonDB Redis Sentinel 实例所属的企业空间和项目。\n在应用设置页签，设置 Redis Sentinel 实例的参数。\n参数 描述 版本\nRedis Sentinel 应用的版本。\n内核版本\nRedis Sentinel 数据库的内核版本。\nCPU/内存\n为每个节点预留的 CPU 和内存资源，同时也是每个节点可使用的 CPU 和内存资源上限。\n存储类\nRedis Sentinel 数据库使用的存储系统对应的存储类。如果下拉列表中没有符合需要的存储类，请联系平台管理员创建存储类。\n卷\n每个节点使用的卷大小，单位为 GiB。\nRedis 节点数量\nRedis Sentinel 实例的节点数量。可选值为 3，5，7。\n密码\nRedis Sentinel 数据库的访问密码。密码只能包含大写字母、小写字母、数字和特殊字符（!$%^\u0026amp;*().;），长度为 6 到 31 个字符。\n点击高级设置，启用或禁用反亲和性配置和 node 亲和设置。\n设置 描述 反亲和性配置\n开启反亲和性配置后， pod 将必须调度到不同的物理节点。\nnode 亲和设置\n开启 node 亲和设置后，添加匹配 Node 的键值对，可以将 pod 部署在特定条件的 node 上。\n点击添加可以设置多个键值对。\n在已添加的键值对右侧点击可删除键值对。\n提示 您还可以打开应用设置页签右上角的编辑 YAML，在 yaml 文件中自定义配置。\n点击确定。RadonDB Redis Sentinel 实例创建后，将显示在 Redis Sentinel 页面的实例列表中。\n","href":"/v2.0/06-radondb-redis-sentinel/01-install-radondb-redis-sentinel/","isSection":null,"linkkey":null,"title":"创建 Redis Sentinel 实例"},{"content":" 本节介绍如何创建 RadonDB 数据库的备份仓库，以存储在各数据库详情页的“备份管理”页签创建的备份。\n目前支持 S3 存储及本地存储两种存储类型。\n前提条件 准备好 S3 备份仓库所在的区域名称、S3 访问地址、访问密钥和访问密钥口令。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏点击备份管理 \u0026gt; 备份仓库管理。\n在页面右侧选择创建。\n参数 描述 数据库类型\n一种数据库类型只能创建一个备份仓库。一个备份仓库只能为一种数据库提供备份存储。\n为备份仓库指定一个数据库类型，以存储该类数据库的备份数据。\n备份仓库名称\n最长 63 个字符，只能包含小写字母、数字及分隔符(\u0026#39;-\u0026#39;)，且必须以小写字母或数字开头及结尾。\nbucket\nS3 备份仓库所在的区域（region）名称。\n访问地址\nS3 备份仓库的访问地址。\n访问密钥\nS3 备份仓库的访问密钥。\n加密密钥\nS3 备份仓库的访问密钥口令。\n描述\n对该备份仓库的描述信息。可包含任意字符，最长 256 个字符。\n点击确定。创建的备份仓库将显示在备份仓库管理页面的仓库列表中。\n在列表上方点击搜索框并输入关键字，可搜索名称包含特定关键字的备份仓库。\n在列表右上角点击可刷新列表信息。\n在列表右上角点击可定制列表中显示的信息。\n","href":"/v2.0/12-backup-management/01-create-a-backup-repository/","isSection":null,"linkkey":null,"title":"创建备份仓库"},{"content":" 本节介绍如何创建数据库用户。\n前提条件 RadonDB MySQL 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签，然后点击创建。\n在创建用户对话框，设置用户名和密码，然后点击确定。用户创建完成后将显示在用户列表中。\n参数 说明 用户名\n自定义用户名称。\n配置要求：用户名只能包含大写字母、小写字母、数字，必须以大写或小写字母开头，长度为 2 到 26 个字符。\n密码\n输入用户密码。\n配置要求：密码必须包含至少一个大写字母、一个小写字母、一个数字和一个特殊字符（!@#$%^\u0026amp;*_+-=），长度为 8 到 32 个字符。\n授权数据库\n输入授权访问的数据库名称。\n默认为*，表示授权全部数据库。仅支持输入一个数据库名称。\n权限\n选择用户的权限。可选择普通权限、高级权限或自定义权限。支持创建多个具有相同权限的用户。\nMySQL 实例创建成功后，将生成默认用户 root。root 是超级管理员用户，拥有对数据库的最高管理权限。该用户账号默认生成，不支持修改和删除。\n普通权限用户具备数据库操作使用权限，包括 ALTER、ALTER ROUTINE、CREATE、CREATE ROUTINE、CREATE TEMPORARY TABLES、CREATE VIEW、DELETE、DROP、EXECUTE、EVENT、INDEX、INSERT、LOCK TABLES、SELECT、SHOW VIEW、UPDATE、TRIGGER、REFERENCES 等数据库操作权限。\n高级权限用户具备数据库高级操作使用权限，除普通权限外，还具备 PROCESS、RELOAD 和 SHOW DATABASES 数据库操作权限。\n自定义权限用户的权限在 yaml 文件中进行设置。打开右上角的编辑 YAML，在 yaml 文件中自定义用户的权限。\n授权主机\n输入允许访问的主机 IP。\n默认为 %，表示任意主机可访问。可输入一个或多个主机 IP，以逗号（,）分隔。\n备注 不支持创建 root 或以 radondb_ 开头的名称。\n不支持创建同名用户。\n","href":"/v2.0/02-radondb-mysql/03-manage-database-users/01-create-a-database-user/","isSection":null,"linkkey":null,"title":"创建数据库用户"},{"content":" 本节介绍如何创建数据库用户。\n前提条件 RadonDB Redis Cluster 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Cluster。\n在 Redis Cluster 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签，然后点击创建。\n在创建用户对话框，设置用户名和密码，然后点击确定。用户创建完成后将显示在用户列表中。\n参数 说明 用户名\n自定义用户名称。\n配置要求：用户名只能包含大写字母、小写字母、数字和下划线（_），必须以大写或小写字母开头，长度为 2 到 26 个字符。\n密码\n输入用户密码。\n配置要求：密码必须包含至少一个大写字母、一个小写字母、一个数字和一个特殊字符（!@#$%^\u0026amp;*_+-=），长度为 8 到 32 个字符。\n权限\n根据 Redis 官方规则设置 ACL 以控制用户的权限。\n备注 不支持创建 root 或以 radondb_ 开头的名称。\n不支持创建同名用户。\n","href":"/v2.0/05-radondb-redis-cluster/03-manage-database-users/01-create-a-database-user/","isSection":null,"linkkey":null,"title":"创建数据库用户"},{"content":" 本节介绍如何创建数据库用户。\n前提条件 RadonDB Redis Sentinel 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Sentinel。\n在 Redis Sentinel 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签，然后点击创建。\n在创建用户对话框，设置用户名和密码，然后点击确定。用户创建完成后将显示在用户列表中。\n参数 说明 用户名\n自定义用户名称。\n配置要求：用户名只能包含大写字母、小写字母、数字和下划线（_），必须以大写或小写字母开头，长度为 2 到 26 个字符。\n密码\n输入用户密码。\n配置要求：密码必须包含至少一个大写字母、一个小写字母、一个数字和一个特殊字符（!@#$%^\u0026amp;*_+-=），长度为 8 到 32 个字符。\n权限\n根据 Redis 官方规则设置 ACL 以控制用户的权限。\n备注 不支持创建 root 或以 radondb_ 开头的名称。\n不支持创建同名用户。\n","href":"/v2.0/06-radondb-redis-sentinel/03-manage-database-users/01-create-a-database-user/","isSection":null,"linkkey":null,"title":"创建数据库用户"},{"content":" 本节介绍如何创建数据库用户。\n前提条件 RadonDB PostgreSQL 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签，然后点击创建。\n在创建用户对话框，设置用户名、密码和权限，然后点击确定。用户创建完成后将显示在用户列表中。\n参数 说明 用户名\n自定义用户名称。\n配置要求：用户名只能包含小写字母、数字和下划线（_），必须以小写字母开头，长度为 2 到 26 个字符。\n密码\n输入用户密码。\n配置要求：密码必须包含至少一个大写字母、一个小写字母、一个数字和一个特殊字符（!@#$%^\u0026amp;*_+-=），长度为 8 到 32 个字符。\n权限\n可选择普通权限或高级权限。支持创建多个具有相同权限的用户。\n普通权限用户具备创建表、索引、Schema 等数据库对象的管理权限。不能创建和管理其他账号。\n高级权限用户具备 Superuser、CREATEDB、CREATEROLE 权限，以及 REPLICATION 等创建数据库的管理权限。\n备注 不支持创建名为 postgres、pgautofailover_replicator 和 pgautofailover_monitor 的用户账号。\n不支持创建同名用户。\n","href":"/v2.0/08-radondb-postgresql/03-manage-database-users/01-create-a-database-user/","isSection":null,"linkkey":null,"title":"创建数据库用户"},{"content":" 本节介绍如何创建 RadonDB Kafka 主题。\n前提条件 RadonDB Kafka 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击主题页签，然后点击创建。\n在创建主题对话框，输入主题名称，并设置分区数量和副本数量。\n点击高级设置，设置以下参数，点击确定。\n参数 描述 cleanup.policy\nKafka 日志清理策略。支持删除和压缩。\nmin.insync.replicas\n当生产者的 request.requird.acks 参数设置为 1 时，副本的最小数量。\nunclean.leader.election.enable\n是否允许不属于 ISR 的副本被选为领导。\nsegment.ms\n段文件轮滚的最大时间间隔，单位为毫秒，最小值为 86400000。\nretention.ms\n日志文件最大保留时间，单位为毫秒。\nretention.bytes\n日志文件的大小上限。超过上限的日志文件将被删除。如果同时设置了 retention.ms 和 retention.bytes，日志文件将在达到任一阈值是被删除。参数值 -1 表示保留所有日志文件。\nmax.message.bytes\n主题级别的消息大小上限。如果未设置此参数，系统将采用实例级别的消息大小上限 1 MB。\n","href":"/v2.0/10-radondb-kafka/07-manage-topics/01-create-topics/","isSection":null,"linkkey":null,"title":"创建主题"},{"content":" 本节介绍如何开启 RadonDB MySQL 数据库自动备份。\n前提条件 RadonDB MySQL 实例状态为运行中。\n您已在运维管理 \u0026gt; 备份管理 \u0026gt; 备份仓库管理中创建备份仓库。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击备份管理页签打开数据库备份列表。\n点击设置自动备份旁的设置。\n在设置自动备份策略对话框，开启下方的滑块，设置备份周期、备份时间段、备份保留期限和备份保留份数，点击确定。\n设置完成后，可继续点击设置编辑自动备份策略。\n","href":"/v2.0/02-radondb-mysql/06-manage-database-backup/01-enable-database-auto-backup/","isSection":null,"linkkey":null,"title":"开启 MySQL 数据库自动备份"},{"content":" 本节介绍如何开启 RadonDB PostgreSQL 数据库自动备份。\n前提条件 RadonDB PostgreSQL 实例状态为运行中。\n您已在运维管理 \u0026gt; 备份管理 \u0026gt; 备份仓库管理中创建备份仓库。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击备份管理页签打开数据库备份列表。\n点击设置自动备份旁的设置。\n在设置自动备份策略对话框，开启下方的滑块，设置备份周期、备份时间段、备份保留期限和备份保留份数，点击确定。\n设置完成后，可继续点击设置编辑自动备份策略。\n","href":"/v2.0/08-radondb-postgresql/06-manage-database-backup/01-enable-database-auto-backup/","isSection":null,"linkkey":null,"title":"开启 PostgreSQL 数据库自动备份"},{"content":" 本节介绍如何快速创建 RadonDB Kafka 实例并访问 Kafka。\n前提条件 在 KubeSphere 企业版平台加入一个项目。\nKubeSphere 企业版平台需要安装“数据库管理平台”扩展组件。\n操作步骤 创建 Kafka 实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在页面右侧选择新建 Kafka 实例。\n在基本信息页签，设置 RadonDB Kafka 实例的基本信息和位置，然后点击下一步。\n在应用设置页签，设置 Kafka 的参数，然后点击确定。\n备注 有关参数的具体解释，请参阅创建 Kafka 实例。\n创建 Kafka 主题 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击主题页签，然后点击创建。\n在创建主题对话框，输入主题名称，如 demo-topic, 并设置分区数量和副本数量，点击确定。\n创建 Kafka 用户 在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击 Kafka 用户页签，然后点击创建。\n在创建用户对话框，设置用户名，如 demo-user1，并配置以下两条规则：\n规则 1: 允许“主题”名称为 demo-topic 的所有操作权限。\n规则 2: 允许“组”名称为 test-consumer-group 的所有操作权限。\n点击确定。用户创建完成后将显示在用户列表中。\n访问 Kafka RadonDB Kafka 支持三种认证类型：TLS、SCRAM-SHA-512 和无需认证。此处以 TLS 为例。关于其它认证类型的登录方式，请参阅访问 Kafka。\n下载 Kafka 客户端二进制包。\n进入 Kafka 二进制包所在目录，执行以下命令解压 Kafka 包：\ntar -xzvf \u0026lt;package_name\u0026gt; 在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面左侧的传输密码区域，下载 CA 证书并保存密码。\n在页面右侧点击 Kafka 用户页签，下载用户证书并保存密码。\n在解压后的 Kafka 包中的 config/producer.properties 和 config/consumer.properties 文件末尾添加下面的内容。\n#在文件末尾添加以下内容。 security.protocol=ssl ssl.truststore.location=\u0026lt;ca.p12\u0026gt; ssl.truststore.password=\u0026lt;truststore_password\u0026gt; ssl.truststore.type=pkcs12 ssl.keystore.location=\u0026lt;user.p12\u0026gt; ssl.keystore.password=\u0026lt;keystore_password\u0026gt; ssl.keystore.type=pkcs12 ssl.endpoint.identification.algorithm= 参数说明如下：\n\u0026lt;ca.p12\u0026gt;：CA 证书的保存路径。\n\u0026lt;truststore_password\u0026gt;：CA 证书的密码。\n\u0026lt;user.p12\u0026gt;：用户证书的保存路径。\n\u0026lt;keystore_password\u0026gt;：用户证书的密码。\n执行以下命令使用 Kafka 客户端生产和消费消息。\n生产消息\n# bin/kafka-console-producer.sh --bootstrap-server 192.168.100.2:31522 --topic demo-topic --producer.config config/producer.properties \u0026gt;hello \u0026gt;radondb \u0026gt;kafka 消费消息\n# bin/kafka-console-consumer.sh --bootstrap-server 192.168.100.2:31522 --topic demo-topic --consumer.config config/consumer.properties hello radondb kafka 其中，bootstrap-server，即命令中的 192.168.100.2:31522，需要修改为 Kafka 实例详情页左侧的访问地址，如下图所示。topic，即命令中的 demo-topic，需要修改为实际使用的主题名称。\n备注 上图框中第一个读写地址是使用 Kubernetes 节点网络访问 Kafka 服务时使用的地址，如在 Kubernetes 节点上访问 Kafka，或 Kubernetes 节点同网段主机上访问 Kafka 服务。第二个读写地址是使用 Kubernetes 集群中 pod 访问 kafka 服务时使用的地址。\n","href":"/v2.0/10-radondb-kafka/01-quickstart/","isSection":null,"linkkey":null,"title":"快速入门"},{"content":" 本节介绍如何对接配置 OpenSearch 集群客户端证书。\n创建 OpenSearch 集群 修改 opensearch.yaml 文件。\n在 spec.general.additionalConfig 区域，增加 plugins.security.ssl.http.clientauth_mode: OPTIONAL 配置。\n集群开启 TLS 认证。\napiVersion: opensearch.opster.io/v1 kind: OpenSearchCluster metadata: name: os-001 spec: general: version: 2.3.0 httpPort: 9200 vendor: opensearch serviceName: os-001 additionalConfig: plugins.security.ssl.http.clientauth_mode: OPTIONAL dashboards: version: 2.3.0 enable: true replicas: 1 resources: requests: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; limits: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; tls: enable: true generate: true confMgmt: smartScaler: true security: config: securityConfigSecret: # Pre create this secret with required security configs, to override the default settings name: securityconfig-secret adminCredentialsSecret: name: admin-credentials-secret tls: transport: generate: true http: generate: true nodePools: - component: masters replicas: 3 diskSize: \u0026#34;50Gi\u0026#34; persistence: pvc: storageClass: csi-qingcloud accessModes: - ReadWriteOnce nodeSelector: resources: requests: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; limits: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; roles: - \u0026#34;cluster_manager\u0026#34; - component: data-hot replicas: 2 diskSize: \u0026#34;80Gi\u0026#34; persistence: pvc: storageClass: csi-qingcloud accessModes: - ReadWriteOnce additionalConfig: node.attr.datatier: \u0026#34;hot\u0026#34; # warm, cold resources: requests: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; limits: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; roles: - \u0026#34;data\u0026#34; --- apiVersion: v1 kind: Secret metadata: name: admin-credentials-secret type: Opaque data: username: c2h1YWliMTIz password: c2h1YWliMTIz 在 securityconfig.yaml 中增加 clientcert_auth_domain 配置。\nconfig.yml: |- _meta: type: \u0026#34;config\u0026#34; config_version: \u0026#34;2\u0026#34; config: dynamic: http: anonymous_auth_enabled: false authc: basic_internal_auth_domain: http_enabled: true transport_enabled: true order: \u0026#34;4\u0026#34; http_authenticator: type: basic challenge: true authentication_backend: type: internal clientcert_auth_domain: http_enabled: true transport_enabled: true order: 1 http_authenticator: type: clientcert #config: #username_attribute: cn #optional, if omitted DN becomes username challenge: false authentication_backend: type: noop 执行以下命令创建集群。\nroot@master1:/home/ubuntu/opensearch# kubectl -n opensearch apply -f ./security-config.yaml root@master1:/home/ubuntu/opensearch# kubectl -n opensearch apply -f ./os-ssl-true.yaml 生成客户端证书 获取 CA 证书。集群自生成的 CA 证书名称为 \u0026lt;cluster-name\u0026gt;-ca。\nroot@master1:/home/ubuntu/opensearch# kubectl -n opensearch get secret os-001-ca -oyaml echo \u0026lt;ca.crt 内容\u0026gt; | base64 -d \u0026gt; root-ca.pem echo \u0026lt;ca.key 内容\u0026gt; | base64 -d \u0026gt; root-ca-key.pem 签发客户端证书。\nopenssl genrsa -out client-key-temp.pem 2048 openssl pkcs8 -inform PEM -outform PEM -in client-key-temp.pem -topk8 -nocrypt -v1 PBE-SHA1-3DES -out client-key.pem openssl req -new -key client-key.pem -subj \u0026#34;/C=CA/ST=ONTARIO/L=TORONTO/O=ORG/OU=UNIT/CN=CLIENT\u0026#34; -out client.csr openssl x509 -req -in client.csr -CA root-ca.pem -CAkey root-ca-key.pem -CAcreateserial -sha256 -out client.pem -days 730 其中 -subj 后的内容可以自定义。\n获取客户端证书的专有名称（DN）。\nroot@master1:/home/ubuntu/opensearch/certs# openssl x509 -subject -nameopt RFC2253 -noout -in client.pem subject=CN=CLIENT,OU=UNIT,O=ORG,L=TORONTO,ST=ONTARIO,C=CA 在 OpenSearch Dashboards 将在上一步获得的映射给用户。\n使用证书访问集群。\nroot@i-abmm2sr0:~/test# curl -k --cert client.pem --key client-key.pem https://172.22.9.17:30201/_cat/nodes?pretty 其中：\n-k： 忽略服务端证书验证。\n--cert： 指定客户端证书。\n--key： 指定客户端证书的 key。\n172.22.9.17： 任意节点 IP。\n30201：9200 暴露在集群外部的端口号。\n多用户访问集群 用户使用客户端证书绑定的 role 来获取相应的权限，根据实际情况，不同用户可配置不同的 role，同时生成对应的证书访问集群。\n下面举例如何将生成的证书绑定在 all_access 和 dashboard_read_only 两个 role 上。关于如何生成证书，请参阅生成客户端证书。\n进入 OpenSearch Dashboards 管理页面，在左侧导航栏选择 Security \u0026gt; Roles。\n在右侧的 Roles 页面，点击 Create role，输入角色名称并设置权限，点击 Submit。\n测试绑定是否成功。\n使用 all_access 证书访问集群，如果出现以下信息，则代表访问集群成功。\n使用 dashboard_read_only 证书访问 Dashboard，如果出现以下信息，则代表访问集群成功。\n使用 dashboard_read_only 证书访问集群。如果出现报错，则符合预期。\n","href":"/v2.0/04-radondb-opensearch/11-configure-certificates/01-configure-client-certificate/","isSection":null,"linkkey":null,"title":"配置 OpenSearch 集群客户端证书"},{"content":" 本节介绍如何管理 RadonDB MySQL 数据库实例。\nRadonDB MySQL 是一款基于 MySQL 的企业级分布式关系型数据库，提供高可用、高性能、高扩展和低成本的数据服务。\n在 KubeSphere 企业版 Web 控制台安装“数据库管理平台”扩展组件后，进入数据库管理平台，即可以容器化的方式部署 MySQL 数据库，并通过图形界面对 MySQL 数据库实例进行管理。\n","href":"/v2.0/02-radondb-mysql/","isSection":null,"linkkey":null,"title":"MySQL"},{"content":" 本节介绍如何编辑 Kafka 用户。\nKafka 不支持编辑已创建用户的名称。\n前提条件 RadonDB Kafka 实例状态为运行中。\n已创建 Kafka 用户。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击 Kafka 用户页签打开 Kafka 用户列表。\n在需要编辑的用户右侧点击，然后在下拉列表中选择编辑信息。\n在编辑用户对话框，您可以修改认证模式和权限规则。修改完成后点击确定。\n","href":"/v2.0/10-radondb-kafka/04-manage-database-users/02-edit-a-database-user/","isSection":null,"linkkey":null,"title":"编辑 Kafka 用户"},{"content":" 本节介绍如何编辑数据库用户。\nMySQL 不支持编辑已创建用户的名称。\n前提条件 RadonDB MySQL 实例状态为运行中。\n已创建数据库用户。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签打开数据库用户列表。\n在需要编辑的用户右侧点击，然后在下拉列表中选择编辑信息。\n在编辑用户对话框，您可以修改密码、授权数据库、权限和授权主机信息。修改完成后点击确定。\n","href":"/v2.0/02-radondb-mysql/03-manage-database-users/02-edit-a-database-user/","isSection":null,"linkkey":null,"title":"编辑数据库用户"},{"content":" 本节介绍如何编辑数据库用户。\nRedis Cluster 不支持编辑已创建用户的名称。\n前提条件 RadonDB Redis Cluster 实例状态为运行中。\n已创建数据库用户。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Cluster。\n在 Redis Cluster 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签打开数据库用户列表。\n在需要编辑的用户右侧点击，然后在下拉列表中选择编辑信息。\n在编辑用户对话框，您可以修改密码和权限。修改完成后点击确定。\n","href":"/v2.0/05-radondb-redis-cluster/03-manage-database-users/02-edit-a-database-user/","isSection":null,"linkkey":null,"title":"编辑数据库用户"},{"content":" 本节介绍如何编辑数据库用户。\nRedis Sentinel 不支持编辑已创建用户的名称。\n前提条件 RadonDB Redis Sentinel 实例状态为运行中。\n已创建数据库用户。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Sentinel。\n在 Redis Sentinel 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签打开数据库用户列表。\n在需要编辑的用户右侧点击，然后在下拉列表中选择编辑信息。\n在编辑用户对话框，您可以修改密码和权限。修改完成后点击确定。\n","href":"/v2.0/06-radondb-redis-sentinel/03-manage-database-users/02-edit-a-database-user/","isSection":null,"linkkey":null,"title":"编辑数据库用户"},{"content":" 本节介绍如何编辑数据库用户。\nPostgreSQL 只支持修改已创建用户的密码，不支持编辑名称和权限。\n前提条件 RadonDB PostgreSQL 实例状态为运行中。\n已创建数据库用户。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签打开数据库用户列表。\n在需要编辑的用户右侧点击，然后在下拉列表中选择编辑信息。\n在编辑用户对话框，修改密码。修改完成后点击确定。\n","href":"/v2.0/08-radondb-postgresql/03-manage-database-users/02-edit-a-database-user/","isSection":null,"linkkey":null,"title":"编辑数据库用户"},{"content":" 本节介绍如何编辑 RadonDB Kafka 主题。\n前提条件 RadonDB Kafka 实例状态为运行中。\n已创建 Kafka 主题。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击主题页签打开主题列表。\n在要编辑的主题右侧点击，然后在下拉列表中选择编辑信息。\n在弹出的编辑主题对话框，您可以修改高级设置信息，点击确定。\n","href":"/v2.0/10-radondb-kafka/07-manage-topics/02-edit-topics/","isSection":null,"linkkey":null,"title":"编辑主题"},{"content":" 本节介绍如何查看所有数据库的备份。\n目前仅支持对 MySQL 和 PostgreSQL 数据库进行备份。\n前提条件 已在 MySQL 或 PostgreSQL 数据库详情页的“备份管理”页签创建了备份。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏点击备份管理 \u0026gt; 备份数据管理。\n点击 MySQL 和 PostgreSQL 页签查看对应数据库的备份。\n参数 说明 名称\n备份任务的名称。\n状态\n主要包含以下状态：\n备份成功：备份任务成功运行。\n备份失败：备份任务运行失败。\n备份中：正在进行备份。\n备份类型\n手动备份或自动备份。\n大小\n备份文件的大小。\n备份开始时间\n开始备份的时间。\n备份结束时间\n结束备份的时间。\n在列表上方点击搜索框并输入关键字，可搜索名称包含特定关键字的备份。\n在列表右上角点击可刷新列表信息。\n在列表右上角点击可定制列表中显示的信息。\n","href":"/v2.0/12-backup-management/02-backup-data-management/01-view-backup-list/","isSection":null,"linkkey":null,"title":"查看数据库备份"},{"content":" 本节介绍如何查看 RadonDB MySQL 实例的运行状态。\n前提条件 已创建 RadonDB MySQL 实例。更多信息，请参阅创建 MySQL 实例。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n已创建的 MySQL 实例将显示在 MySQL 实例列表中。\n参数 描述 名称\nMySQL 实例在 KubeSphere 企业版平台的名称。\n状态\nMySQL 实例的运行状态。\n创建中：正在创建。\n更新中：正在更新配置。\n已完成：更新完成，即将开始运行。\n失败：创建过程中出现错误。\n运行中：运行正常。\n企业空间\nMySQL 实例所属的企业空间。\n项目\nMySQL 实例所属的项目。\n内核版本\nMySQL 数据库的内核版本。\n创建时间\nMySQL 实例的创建时间。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n在详情⻚⾯左侧的详情区域查看其资源属性。\n参数 描述 集群\nMySQL 实例所属的集群。\n企业空间\nMySQL 实例所属的企业空间。\n项目\nMySQL 实例所属的项目。\n名称\nMySQL 实例在 KubeSphere 企业版平台的名称。\n状态\nMySQL 实例的运行状态。\n应用模板\n创建 MySQL 实例所使用的模板类型。\n内核版本\nMySQL 数据库的内核版本。\n创建时间\nMySQL 实例的创建时间。\n访问地址\nMySQL 数据库的访问地址。每个数据库可提供多个不同⽤途的访问地址。\n在详情页面右侧的概览页签，查看数据库的基本信息和节点。\n参数 描述 基本信息\n显示 MySQL 数据库的运行状态、节点和副本数量、每个节点的 CPU 和内存资源以及挂载的卷容量。\n节点\n显示 MySQL 数据库的所有节点及其创建时间、运行状态、容器组 IP 地址、节点类型、CPU 和内存资源、卷容量。\n每个节点被创建为一个容器组。\n","href":"/v2.0/02-radondb-mysql/02-view-database-running-status/","isSection":null,"linkkey":null,"title":"查看运行状态"},{"content":" 本节介绍如何查看 RadonDB OpenSearch 实例的运行状态。\n前提条件 已创建 RadonDB OpenSearch 实例。更多信息，请参阅创建 OpenSearch 实例。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 OpenSearch。\n已创建的 OpenSearch 实例将显示在 OpenSearch 实例列表中。\n参数 描述 名称\nOpenSearch 实例在 KubeSphere 企业版平台的名称。\n状态\nOpenSearch 实例的运行状态。\n创建中：正在创建。\n更新中：正在更新配置。\n已完成：更新完成，即将开始运行。\n失败：创建过程中出现错误。\n运行中：运行正常。\n企业空间\nOpenSearch 实例所属的企业空间。\n项目\nOpenSearch 实例所属的项目。\n内核版本\nOpenSearch 数据库的内核版本。\n创建时间\nOpenSearch 实例的创建时间。\n在 OpenSearch 实例列表中，点击一个实例名称打开其详情页面。\n在详情⻚⾯左侧的详情区域查看其资源属性。\n参数 描述 集群\nOpenSearch 实例所属的集群。\n企业空间\nOpenSearch 实例所属的企业空间。\n项目\nOpenSearch 实例所属的项目。\n名称\nOpenSearch 实例在 KubeSphere 企业版平台的名称。\n状态\nOpenSearch 实例的运行状态。\n应用模板\n创建 OpenSearch 实例所使用的模板类型。\n内核版本\nOpenSearch 数据库的内核版本。\n创建时间\nOpenSearch 实例的创建时间。\n访问地址\nOpenSearch 数据库的访问地址。每个数据库可提供多个不同⽤途的访问地址。\n在详情页面右侧的概览页签，查看数据库的基本信息和节点。\n参数 描述 基本信息\n显示 OpenSearch 数据库的运行状态、各节点数量。\n节点\n显示 OpenSearch 数据库的所有节点及其创建时间、运行状态、容器组 IP 地址、节点类型、CPU 和内存资源、卷容量。\n每个节点被创建为一个容器组。\n","href":"/v2.0/04-radondb-opensearch/02-view-database-running-status/","isSection":null,"linkkey":null,"title":"查看运行状态"},{"content":" 本节介绍如何查看 RadonDB Redis Cluster 实例的运行状态。\n前提条件 已创建 RadonDB Redis Cluster 实例。更多信息，请参阅创建 Redis Cluster 实例。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Cluster。\n已创建的 Redis Cluster 实例将显示在 Redis Cluster 实例列表中。\n参数 描述 名称\nRedis Cluster 实例在 KubeSphere 企业版平台的名称。\n状态\nRedis Cluster 实例的运行状态。\n创建中：正在创建。\n更新中：正在更新配置。\n已完成：更新完成，即将开始运行。\n失败：创建过程中出现错误。\n运行中：运行正常。\n企业空间\nRedis Cluster 实例所属的企业空间。\n项目\nRedis Cluster 实例所属的项目。\n内核版本\nRedis Cluster 数据库的内核版本。\n创建时间\nRedis Cluster 实例的创建时间。\n在 Redis Cluster 实例列表中，点击一个实例名称打开其详情页面。\n在详情⻚⾯左侧的详情区域查看其资源属性。\n参数 描述 集群\nRedis Cluster 实例所属的集群。\n企业空间\nRedis Cluster 实例所属的企业空间。\n项目\nRedis Cluster 实例所属的项目。\n名称\nRedis Cluster 实例在 KubeSphere 企业版平台的名称。\n状态\nRedis Cluster 实例的运行状态。\n应用模板\n创建 Redis Cluster 实例所使用的模板类型。\n内核版本\nRedis Cluster 数据库的内核版本。\n创建时间\nRedis Cluster 实例的创建时间。\n访问地址\nRedis Cluster 数据库的访问地址。每个数据库可提供多个不同⽤途的访问地址。\n在详情页面右侧的概览页签，查看数据库的基本信息和节点。\n参数 描述 基本信息\n显示 Redis Cluster 数据库的运行状态、主节点和备节点数量、每个节点的 CPU 和内存资源以及挂载的卷容量。\n节点\n显示 Redis Cluster 数据库的所有节点及其创建时间、运行状态、容器组 IP 地址、节点类型、CPU 和内存资源、卷容量。\n每个节点被创建为一个容器组。\n","href":"/v2.0/05-radondb-redis-cluster/02-view-database-running-status/","isSection":null,"linkkey":null,"title":"查看运行状态"},{"content":" 本节介绍如何查看 RadonDB Redis Sentinel 实例的运行状态。\n前提条件 已创建 RadonDB Redis Sentinel 实例。更多信息，请参阅创建 Redis Sentinel 实例。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Sentinel。\n已创建的 Redis Sentinel 实例将显示在 Redis Sentinel 实例列表中。\n参数 描述 名称\nRedis Sentinel 实例在 KubeSphere 企业版平台的名称。\n状态\nRedis Sentinel 实例的运行状态。\n创建中：正在创建。\n更新中：正在更新配置。\n已完成：更新完成，即将开始运行。\n失败：创建过程中出现错误。\n运行中：运行正常。\n企业空间\nRedis Sentinel 实例所属的企业空间。\n项目\nRedis Sentinel 实例所属的项目。\n内核版本\nRedis Sentinel 数据库的内核版本。\n创建时间\nRedis Sentinel 实例的创建时间。\n在 Redis Sentinel 实例列表中，点击一个实例名称打开其详情页面。\n在详情⻚⾯左侧的详情区域查看其资源属性。\n参数 描述 集群\nRedis Sentinel 实例所属的集群。\n企业空间\nRedis Sentinel 实例所属的企业空间。\n项目\nRedis Sentinel 实例所属的项目。\n名称\nRedis Sentinel 实例在 KubeSphere 企业版平台的名称。\n状态\nRedis Sentinel 实例的运行状态。\n应用模板\n创建 Redis Sentinel 实例所使用的模板类型。\n内核版本\nRedis Sentinel 数据库的内核版本。\n创建时间\nRedis Sentinel 实例的创建时间。\n访问地址\nRedis Sentinel 数据库的访问地址。每个数据库可提供多个不同⽤途的访问地址。\n在详情页面右侧的概览页签，查看数据库的基本信息和节点。\n参数 描述 基本信息\n显示 Redis Sentinel 数据库的运行状态、主节点和备节点数量、每个节点的 CPU 和内存资源以及挂载的卷容量。\n节点\n显示 Redis Sentinel 数据库的所有节点及其创建时间、运行状态、容器组 IP 地址、节点类型、CPU 和内存资源、卷容量。\n每个节点被创建为一个容器组。\n","href":"/v2.0/06-radondb-redis-sentinel/02-view-database-running-status/","isSection":null,"linkkey":null,"title":"查看运行状态"},{"content":" 本节介绍如何查看 RadonDB MongoDB 实例的运行状态。\n前提条件 已创建 RadonDB MongoDB 实例。更多信息，请参阅创建 MongoDB 实例。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MongoDB。\n已创建的 MongoDB 实例将显示在 MongoDB 实例列表中。\n参数 描述 名称\nMongoDB 实例在 KubeSphere 企业版平台的名称。\n状态\nMongoDB 实例的运行状态。\n创建中：正在创建。\n更新中：正在更新配置。\n已完成：更新完成，即将开始运行。\n失败：创建过程中出现错误。\n运行中：运行正常。\n企业空间\nMongoDB 实例所属的企业空间。\n项目\nMongoDB 实例所属的项目。\n内核版本\nMongoDB 数据库的内核版本。\n创建时间\nMongoDB 实例的创建时间。\n在 MongoDB 实例列表中，点击一个实例名称打开其详情页面。\n在详情⻚⾯左侧的详情区域查看其资源属性。\n参数 描述 集群\nMongoDB 实例所属的集群。\n企业空间\nMongoDB 实例所属的企业空间。\n项目\nMongoDB 实例所属的项目。\n名称\nMongoDB 实例在 KubeSphere 企业版平台的名称。\n状态\nMongoDB 实例的运行状态。\n应用模板\n创建 MongoDB 实例所使用的模板类型。\n内核版本\nMongoDB 数据库的内核版本。\n创建时间\nMongoDB 实例的创建时间。\n访问地址\nMongoDB 数据库的访问地址。\n在详情页面右侧的概览页签，查看数据库的基本信息和节点。\n参数 描述 基本信息\n显示 MongoDB 数据库的运行状态、节点数量和副本数量、每个节点的 CPU 和内存资源以及挂载的卷容量。\n节点\n显示 MongoDB 数据库的所有节点及其创建时间、运行状态、容器组 IP 地址、节点类型、CPU 和内存资源、卷容量。\n每个节点被创建为一个容器组。\n","href":"/v2.0/07-radondb-mongodb/02-view-database-running-status/","isSection":null,"linkkey":null,"title":"查看运行状态"},{"content":" 本节介绍如何查看 RadonDB PostgreSQL 实例的运行状态。\n前提条件 已创建 RadonDB PostgreSQL 实例。更多信息，请参阅创建 PostgreSQL 实例。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n已创建的 PostgreSQL 实例将显示在 PostgreSQL 实例列表中。\n参数 描述 名称\nPostgreSQL 实例在 KubeSphere 企业版平台的名称。\n状态\nPostgreSQL 实例的运行状态。\n创建中：正在创建。\n更新中：正在更新配置。\n已完成：更新完成，即将开始运行。\n失败：创建过程中出现错误。\n运行中：运行正常。\n企业空间\nPostgreSQL 实例所属的企业空间。\n项目\nPostgreSQL 实例所属的项目。\n内核版本\nPostgreSQL 数据库的内核版本。\n创建时间\nPostgreSQL 实例的创建时间。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在详情⻚⾯左侧的详情区域查看其资源属性。\n参数 描述 集群\nPostgreSQL 实例所属的集群。\n企业空间\nPostgreSQL 实例所属的企业空间。\n项目\nPostgreSQL 实例所属的项目。\n名称\nPostgreSQL 实例在 KubeSphere 企业版平台的名称。\n状态\nPostgreSQL 实例的运行状态。\n应用模板\n创建 PostgreSQL 实例所使用的模板类型。\n内核版本\nPostgreSQL 数据库的内核版本。\n创建时间\nPostgreSQL 实例的创建时间。\n访问地址\nPostgreSQL 数据库的访问地址。每个数据库可提供多个不同⽤途的访问地址。\n在详情页面右侧的概览页签，查看数据库的基本信息和节点。\n参数 描述 基本信息\n显示 PostgreSQL 数据库的运行状态、节点和副本数量、每个节点的 CPU 和内存资源以及挂载的卷容量。\n节点\n显示 PostgreSQL 数据库的所有节点及其创建时间、运行状态、容器组 IP 地址、节点类型、CPU 和内存资源、卷容量。\n每个节点被创建为一个容器组。\n","href":"/v2.0/08-radondb-postgresql/02-view-database-running-status/","isSection":null,"linkkey":null,"title":"查看运行状态"},{"content":" 本节介绍如何查看 RadonDB RabbitMQ 实例的运行状态。\n前提条件 已创建 RadonDB RabbitMQ 实例。更多信息，请参阅创建 RabbitMQ 实例。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 RabbitMQ。\n已创建的 RabbitMQ 实例将显示在 RabbitMQ 实例列表中。\n参数 描述 名称\nRabbitMQ 实例在 KubeSphere 企业版平台的名称。\n状态\nRabbitMQ 实例的运行状态。\n创建中：正在创建。\n更新中：正在更新配置。\n已完成：更新完成，即将开始运行。\n失败：创建过程中出现错误。\n运行中：运行正常。\n企业空间\nRabbitMQ 实例所属的企业空间。\n项目\nRabbitMQ 实例所属的项目。\n内核版本\nRabbitMQ 的内核版本。\n创建时间\nRabbitMQ 实例的创建时间。\n在 RabbitMQ 实例列表中，点击一个实例名称打开其详情页面。\n在详情⻚⾯左侧的详情区域查看其资源属性。\n参数 描述 集群\nRabbitMQ 实例所属的集群。\n企业空间\nRabbitMQ 实例所属的企业空间。\n项目\nRabbitMQ 实例所属的项目。\n名称\nRabbitMQ 实例在 KubeSphere 企业版平台的名称。\n状态\nRabbitMQ 实例的运行状态。\n应用模板\n创建 RabbitMQ 实例所使用的模板类型。\n内核版本\nRabbitMQ 实例的内核版本。\n创建时间\nRabbitMQ 实例的创建时间。\n访问地址\nRabbitMQ 实例的访问地址。每个实例可提供多个不同⽤途的访问地址。\n在详情页面右侧的概览页签，查看实例的基本信息和节点。\n参数 描述 基本信息\n显示 RabbitMQ 实例的运行状态、节点和副本数量、每个节点的 CPU 和内存资源以及挂载的卷容量。\n节点\n显示 RabbitMQ 实例的所有节点及其创建时间、运行状态、容器组 IP 地址、节点类型、CPU 和内存资源、卷容量。\n每个节点被创建为一个容器组。\n","href":"/v2.0/11-radondb-rabbitmq/02-view-rabbitmq-running-status/","isSection":null,"linkkey":null,"title":"查看运行状态"},{"content":" 本节介绍如何在 DMP 数据库管理平台上创建 RadonDB Kafka 实例。\n前提条件 在 KubeSphere 企业版平台加入一个项目。\nKubeSphere 企业版平台需要安装“数据库管理平台”扩展组件。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在页面右侧选择新建 Kafka 实例。\n在基本信息页签，设置 RadonDB Kafka 实例的基本信息和位置，然后点击下一步。\n参数 描述 名称\nKafka 实例的名称。名称只能包含小写字母、数字和连字符（-），必须以小写字母开头并以小写字母或数字结尾，最长 32 个字符。\n描述\nKafka 实例的描述信息。描述可包含任意字符，最长 256 个字符。\n位置\nKafka 实例所属的企业空间和项目。\n在应用设置页签，设置 Kafka 实例的参数。\n参数 描述 版本\nKafka 应用的版本。\n内核版本\nKafka 的内核版本。\n资源\n分配给每个 Kafka/ZooKeeper 节点的 CPU 和内存资源。\nKafka/ZooKeeper 节点数量\nKafka/ZooKeeper 节点的数量。\n存储类\nKafka/ZooKeeper 使用的存储系统对应的存储类。如果下拉列表中没有符合需要的存储类，请联系平台管理员创建存储类。\n卷\n每个 Kafka/ZooKeeper 节点使用的卷大小，单位为 GiB。\n点击高级设置，启用或禁用反亲和性配置和 node 亲和设置。\n设置 描述 反亲和性配置\n开启反亲和性配置后， pod 将必须调度到不同的物理节点。\nnode 亲和设置\n开启 node 亲和设置后，添加匹配 Node 的键值对，可以将 pod 部署在特定条件的 node 上。\n点击添加可以设置多个键值对。\n在已添加的键值对右侧点击可删除键值对。\n提示 您还可以打开应用设置页签右上角的编辑 YAML，在 yaml 文件中自定义配置。\n点击确定。RadonDB Kafka 实例创建后，将显示在 Kafka 页面的实例列表中。\n","href":"/v2.0/10-radondb-kafka/02-install-radondb-kafka/","isSection":null,"linkkey":null,"title":"创建 Kafka 实例"},{"content":" 本节介绍如何创建 RadonDB MySQL 数据库备份。\n备注 备份过程可能会导致数据库服务压力过大，请在非高峰时段执行此操作。\n前提条件 RadonDB MySQL 实例状态为运行中。\n您已在运维管理 \u0026gt; 备份管理 \u0026gt; 备份仓库管理中创建备份仓库。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击备份管理页签打开数据库备份列表。\n点击创建备份。\n在创建备份对话框，输入备份任务的名称，然后点击确定。\n数据库备份将显示在备份列表中。\n","href":"/v2.0/02-radondb-mysql/06-manage-database-backup/02-create-database-backup/","isSection":null,"linkkey":null,"title":"创建 MySQL 数据库备份"},{"content":" 本节介绍如何创建 RadonDB PostgreSQL 数据库备份。\n备注 备份过程可能会导致数据库服务压力过大，请在非高峰时段执行此操作。\n前提条件 RadonDB PostgreSQL 实例状态为运行中。\n您已在运维管理 \u0026gt; 备份管理 \u0026gt; 备份仓库管理中创建备份仓库。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击备份管理页签打开数据库备份列表。\n点击创建备份。\n在创建备份对话框，输入备份任务的名称，然后点击确定。\n数据库备份将显示在备份列表中。\n","href":"/v2.0/08-radondb-postgresql/06-manage-database-backup/02-create-database-backup/","isSection":null,"linkkey":null,"title":"创建 PostgreSQL 数据库备份"},{"content":" 本节介绍如何从备份恢复数据库实例。\n前提条件 已在 MySQL 或 PostgreSQL 数据库详情页的“备份管理”页签创建了备份，且状态为备份成功。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏点击备份管理 \u0026gt; 备份数据管理。\n点击 MySQL 和 PostgreSQL 页签查看对应数据库的备份。\n找到目标备份，点击，选择从备份恢复。\n在基本信息页签，编辑将通过备份创建的实例名称，然后点击下一步。\n在应用设置页签，确认将创建的实例的参数。\n点击确定，将自动在对应的数据库页面创建新的实例。\n备注 恢复的新实例的磁盘规格必须大于或等于原实例，以免因磁盘不足导致恢复失败。\n","href":"/v2.0/12-backup-management/02-backup-data-management/02-restore-from-a-backup/","isSection":null,"linkkey":null,"title":"从备份恢复数据库实例"},{"content":" 本节介绍如何对 RadonDB 数据库的备份进行管理，如查看数据库备份、从备份恢复数据库集群、删除数据库备份等。\n","href":"/v2.0/12-backup-management/02-backup-data-management/","isSection":null,"linkkey":null,"title":"管理数据库备份"},{"content":" 本节介绍如何从 KubeSphere 企业版 v4.0 Web 控制台进入 RadonDB DMP 数据库管理平台，并查看其概览信息。\n前提条件 以 platform-admin 角色登录到 KubeSphere 企业版 Web 控制台。有关更多信息，请参阅 KubeSphere 企业版 v4.0 使用文档的用户和角色管理章节。\nKubeSphere 企业版平台需要安装“数据库管理平台”扩展组件。有关更多信息，请参阅 KubeSphere 企业版 v4.0 使用文档的扩展组件管理章节。\n操作步骤 打开 Web 浏览器，在地址栏中输入 KubeSphere 企业版 Web 控制台的 IP 地址和端口号。\n在 KubeSphere 企业版登录页面，输入用户信息然后点击登录。\n点击顶部导航栏上的图标，点击 RadonDB DMP，进入数据库管理平台。\n在概览页面，查看 RadonDB DMP 提供的数据库服务、中间件服务、备份管理、告警状态等的概览信息。\n备注 对于多集群环境，在概览上方的下拉菜单中切换集群，为不同集群管理数据库实例。\n下拉菜单中显示的集群为您配置集群 Agent 时选择的集群。\n","href":"/v2.0/01-intro/02-access-dmp/","isSection":null,"linkkey":null,"title":"进入数据库管理平台"},{"content":" 本节介绍如何配置 OpenSearch 集群服务端证书。\n服务端证书有以下两种生成方式：\nOpenSearch 集群内部自动生成证书(默认)，具有以下特点：\n有效期为 10 年。\n暂不支持证书更换或续签。\n该证书仅能在 Kubernetes 集群内部使用，无法用于 Kubernetes 外部访问。\n用户自定义证书，具有以下特点：\n自定义有效期。\n暂不支持证书更换或续签。\n该证书可用于从 Kubernetes 集群外部访问 OpenSearch 集群。\nOpenSearch 集群内部自动生成证书 在 OpenSearch Dashboards 上开启 TLS 认证。\n将 spec.dashboards.tls.enable 的值设置为 true。\n将 spec.dashboards.tls.generate 的值设置为 true。\n在 OpenSearch 集群上开启 TLS 认证。\n将 spec.security.tls.transport.generate 的值设置为 true。\n将 spec.security.tls.http.generate 的值设置为 true。\n配置文件如下所示：\napiVersion: opensearch.opster.io/v1 kind: OpenSearchCluster metadata: name: os-001 spec: general: version: 2.3.0 httpPort: 9200 vendor: opensearch serviceName: os-001 dashboards: version: 2.3.0 enable: true replicas: 1 resources: requests: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; limits: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; tls: enable: true generate: true confMgmt: smartScaler: true security: config: securityConfigSecret: # Pre create this secret with required security configs, to override the default settings name: securityconfig-secret adminCredentialsSecret: name: admin-credentials-secret tls: transport: generate: true http: generate: true nodePools: - component: masters replicas: 3 diskSize: \u0026#34;50Gi\u0026#34; persistence: pvc: storageClass: csi-qingcloud accessModes: - ReadWriteOnce nodeSelector: resources: requests: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; limits: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; roles: - \u0026#34;cluster_manager\u0026#34; - component: data-hot replicas: 2 diskSize: \u0026#34;80Gi\u0026#34; persistence: pvc: storageClass: csi-qingcloud accessModes: - ReadWriteOnce additionalConfig: node.attr.datatier: \u0026#34;hot\u0026#34; # warm, cold resources: requests: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; limits: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; roles: - \u0026#34;data\u0026#34; --- apiVersion: v1 kind: Secret metadata: name: admin-credentials-secret type: Opaque data: username: c2h1YWliMTIz password: c2h1YWliMTIz 在 master 节点上执行以下命令创建集群。\nroot@master1:/home/ubuntu/opensearch# kubectl -n opensearch apply -f ./os-ssl-true.yaml 在 master 节点执行以下命令，并访问 https://cluster-name.namespace:9200 验证 OpenSearch 证书是否可用。\nroot@master1:/home/ubuntu/opensearch# kubectl -n opensearch exec -it pod/os-001-masters-0 -c opensearch -- /bin/bash [opensearch@os-001-masters-0 ~]$ curl https://os-001.opensearch.svc:9200/_cat/nodes -u root:U61yyB86o2QbyyFo --cacert /usr/share /opensearch/config/tls-http/ca.crt 10.10.194.117 40 93 7 1.03 1.04 1.02 d data - os-001-data-hot-1 10.10.215.129 46 88 9 0.52 0.65 0.84 m cluster_manager - os-001-masters-1 10.10.215.128 51 94 5 0.52 0.65 0.84 d data - os-001-data-hot-0 10.10.2.137 45 100 8 1.98 1.21 1.12 m cluster_manager * os-001-masters-0 10.10.194.118 44 88 17 1.03 1.04 1.02 m cluster_manager - os-001-masters-2 此处 --cacert 指定了 CA 证书的路径 /usr/share/opensearch/config/tls-http/ca.crt。\n在 Dashboard 节点执行以下命令，并访问 https://cluster-name-dashboards:5601 验证 Dashboard 证书是否可用。\nroot@master1:/home/ubuntu/opensearch# kubectl -n opensearch exec -it os-001-dashboards-7d9886689d-zd7jb -- /bin/bash [opensearch-dashboards@os-001-dashboards-7d9886689d-zd7jb ~]$ curl https://os-001-dashboards:5601 -u dashboarduser:dashboarduser curl: (60) SSL certificate problem: unable to get local issuer certificate More details here: https://curl.se/docs/sslcerts.html curl failed to verify the legitimacy of the server and therefore could not establish a secure connection to it. To learn more about this situation and how to fix it, please visit the web page mentioned above. [opensearch-dashboards@os-001-dashboards-7d9886689d-zd7jb ~]$ curl https://os-001-dashboards:5601 -u dashboarduser:dashboarduser --cacert /usr/share/opensearch-dashboards/certs/tls.crt [opensearch-dashboards@os-001-dashboards-7d9886689d-zd7jb ~]$ 此处 --cacert 指定了 CA 证书的路径 /usr/share/opensearch/config/tls-http/ca.crt。\n集群内部生成的证书名称为 \u0026lt;cluster-name\u0026gt;-ca 和 \u0026lt;cluster-name\u0026gt;-dashboards-cert，如下图所示。\n执行以下命令获取 OpenSearch 集群 CA 证书并保存到 ca-test.cert 文件中。\nroot@master1:/home/ubuntu# kubectl -n opensearch get secrets os-001-ca -ojsonpath=\u0026#39;{.data}\u0026#39; | jq -r \u0026#39;.\u0026#34;ca.crt\u0026#34;\u0026#39; | base64 -d \u0026gt; test-ca.crt 用户自定义证书 使用 OpenSSL 签发 Dashboard 和 OpenSearch 证书。\n规划证书。\n项目 内容 CN\n*.\u0026lt;cluster-name\u0026gt;.\u0026lt;namespace\u0026gt;.svc.cluster.local\nSAN\n*.\u0026lt;cluster-name\u0026gt;.\u0026lt;namespace\u0026gt;.svc.cluster.local\n.\u0026lt;cluster-name\u0026gt;-dashboards.\n创建 CA 证书 root-ca.pem 和 root-ca-key.pem。\nopenssl genrsa -out root-ca-key.pem 2048 openssl req -new -x509 -sha256 -key root-ca-key.pem -subj \u0026#34;/C=CN/ST=STATE/L=CITY/O=ORG/OU=UNIT/CN=demo@nowhere.com\u0026#34; -out root-ca.pem -days 3650 创建证书配置文件 san.cnf。\n[req] distinguished_name = req_distinguished_name req_extensions = req_ext prompt = no [req_distinguished_name] CN = *.os002.opensearch.svc.cluster.local [req_ext] subjectAltName = @alt_names [alt_names] DNS.1 = *.os002.opensearch.svc.cluster.local DNS.2 = *.os002-dashboards.* 备注 此处集群名称 os002，namespace 名称 opensearch 仅为示例，请根据实际情况替换。\n创建证书 my.crt 和 my.key。\nopenssl req -out my.csr -newkey rsa:2048 -nodes -keyout my.key -config san.cnf openssl x509 -req -in my.csr -CA root-ca.pem -CAkey root-ca-key.pem -CAcreateserial -sha256 -out my.crt -days 36 50 -extensions req_ext -extfile san.cnf 验证证书，含 CN 和 SAN 项。\nopenssl x509 -in my.crt -noout -text 通过 my.crt 和 my.key 创建 HTTP 证书。\nroot@master1:/home/ubuntu/opensearch/certs# kubectl -n opensearch create secret tls cluster-http-cert --cert=my.crt --key=my.key secret/cluster-http-cert created 通过 root-ca.pem 创建 CA 证书。\nroot@master1:/home/ubuntu/opensearch/certs# kubectl -n opensearch create secret generic cluster-ca --from-file=ca.crt=./root-ca.pem -- from-file=ca.key=./root-ca-key.pem secret/cluster-ca created 参照以下内容配置 CR 文件。\n开启 Dashboard TLS 认证\n将 spec.dashboards.tls.enable 设置为 true。\nspec.dashboards.tls.generate设置为 false。\nspec.dashboards.tls.secret 设置为 HTTP 证书名称， 此处为 cluster-http-cert。\nspec.dashboards.tls.caSecret 设置为 CA 证书名称， 此处为 cluster-ca。\n开启 OpenSearch 集群 TLS 认证\nspec.security.tls.transport.generate 设置为 true。\nspec.security.tls.transport.caSecret 设置为 CA 证书名称， 此处为 cluster-ca。\nspec.security.tls.http.generate 设置为 false。\nspec.security.tls.http.caSecret 设置为 CA 证书名称， 此处为 cluster-ca。\nspec.security.tls.http.secret 设置为 HTTP 证书名称， 此处为 cluster-http-cert。\n配置文件如下所示：\napiVersion: opensearch.opster.io/v1 kind: OpenSearchCluster metadata: name: os002 spec: general: version: 2.3.0 httpPort: 9200 vendor: opensearch serviceName: os002 dashboards: version: 2.3.0 enable: true replicas: 1 resources: requests: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; limits: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; tls: enable: true generate: false secret: name: cluster-http-cert caSecret: name: cluster-ca confMgmt: smartScaler: true security: config: securityConfigSecret: # Pre create this secret with required security configs, to override the default settings name: securityconfig-secret adminCredentialsSecret: name: admin-credentials-secret tls: transport: generate: true caSecret: name: cluster-ca http: generate: false secret: name: cluster-http-cert caSecret: name: cluster-ca nodePools: - component: masters replicas: 3 diskSize: \u0026#34;50Gi\u0026#34; persistence: pvc: storageClass: csi-qingcloud accessModes: - ReadWriteOnce nodeSelector: resources: requests: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; limits: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; roles: - \u0026#34;cluster_manager\u0026#34; - component: data-hot replicas: 2 diskSize: \u0026#34;80Gi\u0026#34; persistence: pvc: storageClass: csi-qingcloud accessModes: - ReadWriteOnce additionalConfig: node.attr.datatier: \u0026#34;hot\u0026#34; # warm, cold resources: requests: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; limits: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; roles: - \u0026#34;data\u0026#34; --- apiVersion: v1 kind: Secret metadata: name: admin-credentials-secret type: Opaque data: username: c2h1YWliMTIz password: c2h1YWliMTIz 创建 OpenSearch 集群。\nroot@master1:/home/ubuntu/opensearch# kubectl -n opensearch apply -f os-ssl-false.yaml 验证 OpenSearch 集群证书。\nroot@master1:/home/ubuntu/opensearch# kubectl -n opensearch exec -it os002-masters-0 -- /bin/bash Defaulted container \u0026#34;opensearch\u0026#34; out of: opensearch, init (init) [opensearch@os002-masters-0 ~]$ curl https://os002-masters-0.os002.opensearch.svc.cluster.local:9200/_cat/nodes --cacert /usr/share /opensearch/config/tls-http/ca.crt -u root:x804NqPd3tz7HBzr 10.10.2.138 63 95 17 2.16 1.68 1.42 m cluster_manager * os002-masters-0 10.10.194.120 49 94 6 4.88 2.75 1.75 d data - os002-data-hot-1 10.10.194.121 35 87 7 4.88 2.75 1.75 m cluster_manager - os002-masters-2 10.10.215.132 53 94 13 1.58 0.93 0.86 d data - os002-data-hot-0 10.10.215.133 28 88 8 1.58 0.93 0.86 m cluster_manager - os002-masters-1 [opensearch@os002-masters-0 ~]$ 外部验证 OpenSearch 集群证书。\n备注 在 2.0.16 之前的 operator 版本，OpenSearch 集群 Service 类型默认为 ClusterIP，且不支持修改，故无法修改 service 类型为 NodePort 供外部访问集群。若需要外部访问，可以通过额外增加一个 NodePort 类型的 service 实现。\n在 2.0.16 及以后的 operator 版本，service 默认类型已调整为 NodePort。\n获取 service/opensearch 的 YAML 配置，并重命名。\nroot@master1:~# kubectl -n opensearch get service/opensearch -oyaml \u0026gt; opensearch-external.yaml 修改 opensearch-external.yaml。\napiVersion: v1 kind: Service metadata: labels: app.kubernetes.io/service: opensearch opster.io/exporter-monitor: \u0026#34;yes\u0026#34; opster.io/opensearch-cluster: opensearch name: opensearch-external namespace: opensearch ownerReferences: - apiVersion: opensearch.opster.io/v1 blockOwnerDeletion: true controller: true kind: OpenSearchCluster name: opensearch uid: 5f16ee6c-35ba-460f-910a-fa88f4f32f86 spec: clusterIP: 10.96.220.19 clusterIPs: - 10.96.220.19 internalTrafficPolicy: Cluster ipFamilies: - IPv4 ipFamilyPolicy: SingleStack ports: - name: http port: 9200 protocol: TCP targetPort: 9200 - name: transport port: 9300 protocol: TCP targetPort: 9300 - name: metrics port: 9600 protocol: TCP targetPort: 9600 - name: rca port: 9650 protocol: TCP targetPort: 9650 selector: opster.io/opensearch-cluster: opensearch sessionAffinity: None type: NodePort status: loadBalancer: {} metadata 里保留 labels、name、namespace、ownerReferences 属性。\n修改 metadata.name 字段，自定义 service 名称。\n删除 spec.clusterIP 和 spec.clusterIPs 字段，防止 IP 冲突。\n修改 spec.type 为 NodePort。\n可参考以下示例：\napiVersion: v1 kind: Service metadata: labels: app.kubernetes.io/service: opensearch opster.io/exporter-monitor: \u0026#34;yes\u0026#34; opster.io/opensearch-cluster: opensearch name: opensearch-external namespace: opensearch ownerReferences: - apiVersion: opensearch.opster.io/v1 blockOwnerDeletion: true controller: true kind: OpenSearchCluster name: opensearch uid: 5f16ee6c-35ba-460f-910a-fa88f4f32f86 spec: internalTrafficPolicy: Cluster ipFamilies: - IPv4 ipFamilyPolicy: SingleStack ports: - name: http port: 9200 protocol: TCP targetPort: 9200 - name: transport port: 9300 protocol: TCP targetPort: 9300 - name: metrics port: 9600 protocol: TCP targetPort: 9600 - name: rca port: 9650 protocol: TCP targetPort: 9650 selector: opster.io/opensearch-cluster: opensearch sessionAffinity: None type: NodePort status: loadBalancer: {} 创建 opensearch-external 服务。\nroot@master1:~# kubectl -n opensearch apply -f ./opensearch-external.yaml 检查服务是否创建成功。\nroot@master1:~# kubectl -n opensearch get svc 如果您能够在回显中找到 opensearch-external 服务，则该服务创建成功。\n配置 /etc/hosts 文件。\necho \u0026#34;172.22.9.17 os002-masters-0.os002.os002.opensearch.svc.cluster.local\u0026#34; \u0026gt;\u0026gt; /etc/hosts 其中，172.22.9.17 为任意节点名称，os002-masters-0.os002.os002.opensearch.svc.cluster.local 为其中一个 master 节点名称，可任意配置。\n执行以下命令进行外部访问。\nroot@i-abmm2sr0:~/test# curl https://os002-masters-0.os002.opensearch.svc.cluster.local:30255/_cat/nodes --cacert ./root-ca.pem -u root:x804NqPd3tz7HBzr 10.10.194.121 61 88 6 0.49 0.80 1.28 m cluster_manager - os002-masters-2 10.10.215.133 57 89 7 0.35 0.60 0.79 m cluster_manager - os002-masters-1 10.10.194.120 57 94 4 0.49 0.80 1.28 d data - os002-data-hot-1 10.10.2.138 34 95 5 3.41 2.13 1.80 m cluster_manager * os002-masters-0 10.10.215.132 57 95 8 0.35 0.60 0.79 d data - os002-data-hot-0 ","href":"/v2.0/04-radondb-opensearch/11-configure-certificates/02-configure-server-certificate/","isSection":null,"linkkey":null,"title":"配置 OpenSearch 集群服务端证书"},{"content":" 本节介绍如何查看 RadonDB MySQL 数据库备份。\n前提条件 RadonDB MySQL 实例状态为运行中。\n您已经创建了 MySQL 数据库备份。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击备份管理页签，查看以下信息。\n参数 说明 名称\n备份任务的名称。\n状态\n主要包含以下状态：\n备份成功：备份任务成功运行。\n备份失败：备份任务运行失败。\n备份中：正在进行备份。\n备份类型\n手动备份或自动备份。\n大小\n备份文件的大小。\n备份开始时间\n开始备份的时间。\n备份结束时间\n结束备份的时间。\n在列表上方点击搜索框并输入关键字，可搜索名称包含特定关键字的备份。\n在列表右上角点击可刷新列表信息。\n在列表右上角点击可定制列表中显示的信息。\n备注 数据库备份也会显示在运维管理 \u0026gt; 备份管理 \u0026gt; 备份数据管理页面。\n","href":"/v2.0/02-radondb-mysql/06-manage-database-backup/03-view-database-backup/","isSection":null,"linkkey":null,"title":"查看 MySQL 数据库备份"},{"content":" 本节介绍如何查看 RadonDB PostgreSQL 数据库备份。\n前提条件 RadonDB PostgreSQL 实例状态为运行中。\n您已经创建了 PostgreSQL 数据库备份。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击备份管理页签，查看以下信息。\n参数 说明 名称\n备份任务的名称。\n状态\n主要包含以下状态：\n备份成功：备份任务成功运行。\n备份失败：备份任务运行失败。\n备份中：正在进行备份。\n备份类型\n手动备份或自动备份。\n大小\n备份文件的大小。\n备份开始时间\n开始备份的时间。\n备份结束时间\n结束备份的时间。\n在列表上方点击搜索框并输入关键字，可搜索名称包含特定关键字的备份。\n在列表右上角点击可刷新列表信息。\n在列表右上角点击可定制列表中显示的信息。\n备注 数据库备份也会显示在运维管理 \u0026gt; 备份管理 \u0026gt; 备份数据管理页面。\n","href":"/v2.0/08-radondb-postgresql/06-manage-database-backup/03-view-database-backup/","isSection":null,"linkkey":null,"title":"查看 PostgreSQL 数据库备份"},{"content":" 本节介绍如何查看 RadonDB Kafka 实例的运行状态。\n前提条件 已创建 RadonDB Kafka 实例。更多信息，请参阅创建 Kafka 实例。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n已创建的 Kafka 实例将显示在 Kafka 实例列表中。\n参数 描述 名称\nKafka 实例在 KubeSphere 企业版平台的名称。\n状态\nKafka 实例的运行状态。\n创建中：正在创建。\n更新中：正在更新配置。\n已完成：更新完成，即将开始运行。\n失败：创建过程中出现错误。\n运行中：运行正常。\n企业空间\nKafka 实例所属的企业空间。\n项目\nKafka 实例所属的项目。\n内核版本\nKafka 的内核版本。\n创建时间\nKafka 实例的创建时间。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在详情⻚⾯左侧的详情区域查看其资源属性。\n参数 描述 集群\nKafka 实例所属的集群。\n企业空间\nKafka 实例所属的企业空间。\n项目\nKafka 实例所属的项目。\n名称\nKafka 实例在 KubeSphere 企业版平台的名称。\n状态\nKafka 实例的运行状态。\n应用模板\n创建 Kafka 实例所使用的模板类型。\n内核版本\nKafka 的内核版本。\n创建时间\nKafka 实例的创建时间。\n访问地址\nKafka 实例的访问地址。每个实例可提供多个不同⽤途的访问地址。\n传输密码\nKafka 实例的 CA 证书，CA 密码和证书有效期。\n在详情页面右侧的概览页签，查看实例的基本信息和节点。\n参数 描述 基本信息\n显示 Kafka 实例的运行状态、Kafka 节点和 ZooKeeper 节点的数量、每个节点的 CPU 和内存资源以及挂载的卷容量。\n节点\n显示 Kafka 实例的所有节点及其创建时间、运行状态、容器组 IP 地址、节点类型、CPU 和内存资源、卷容量。\n每个节点被创建为一个容器组。\n","href":"/v2.0/10-radondb-kafka/03-view-kafka-running-status/","isSection":null,"linkkey":null,"title":"查看运行状态"},{"content":" 本节主要介绍如何在 Kubesphere 集群内部连接 RadonDB MongoDB 数据库。\n前提条件 已获取 KubeSphere 企业版平台登录账号和密码，且已获取平台操作管理权限。\nRadonDB MongoDB 实例状态为运行中。\n操作步骤 在 Kubesphere 集群内部创建一个 Pod 作为 MongoDB 客户端。\n将鼠标悬停至 Web 控制台右下角的，点击 kubectl，在弹出的对话框执行以下命令创建一个 client.yaml 文件。\nvi client.yaml 文件内容如下，其中 namespace 的值必须与 MongoDB 数据库所在的企业空间名称一致。\napiVersion: v1 kind: Pod metadata: name: mongoclient namespace: default spec: containers: - name: mongo image: radondb/mongodb:4.2.19 执行以下命令，创建一个名为 mongoclient 的 Pod。\nkubectl apply -f client.yaml 执行以下命令访问 MongoDB 数据库。\nkubectl exec -it mongoclient -n \u0026lt;namespace\u0026gt; -- mongo mongodb://\u0026lt;username\u0026gt;:\u0026lt;password\u0026gt;@\u0026lt;ip:port\u0026gt;/?authSource=admin 参数 描述 示例 namespace\nMongoDB 数据库所在的企业空间名称。\ndefault\nusername\nMongoDB 数据库用户名。\n默认为 admin\npassword\nMongoDB 数据库密码。\n默认为 admin123\nip:port\nMongoDB 数据库的访问地址，可在 MongoDB 实例的详情页左侧查看访问地址。\nradondb-ukuhdz-svc.p1:27017\n","href":"/v2.0/07-radondb-mongodb/03-access-the-database/","isSection":null,"linkkey":null,"title":"访问 MongoDB 数据库"},{"content":" Dashboards 是 OpenSearch 的可视化工具，提供面向用户的 OpenSearch 插件管理服务，包括安全性、警报、索引状态管理、 SQL 管理等插件。\n本节介绍如何访问 OpenSearch 数据库的 Dashboards。\n前提条件 如果使用外部读写地址，取决于您的网络环境，您可能需要配置流量转发和防火墙规则。有关具体操作请联系您的网络环境管理员。\nRadonDB OpenSearch 实例状态为运行中。\n已获取 RadonDB OpenSearch 数据库用户名和密码。如果您在创建 RadonDB OpenSearch 实例时未修改过用户名和密码，此处默认用户名为 admin，默认密码为 RadonDB@123。如果您修改过用户名和密码，请使用修改后的用户名和密码登录。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入项目。\n点击应用负载 \u0026gt; 服务，搜索并点击新建的 OpenSearch 实例的 Dashboards 服务进入详情页面。\n点击更多操作 \u0026gt; 编辑外部访问。\n将 Dashboards 服务的访问模式设置为 NodePort，点击确定。\n进入 DMP 数据库管理平台，在左侧导航栏点击 OpenSearch，然后点击已创建的 OpenSearch 实例进入详情页面。\n在页面左侧的访问地址区域，查看控制面板地址。\n在浏览器输入 http://dashboard_IP:dashboard_port/ 进入 OpenSearch Dashboards 登录页面，输入账户名和密码。\n备注 请将 dashboard_IP 和 dashboard_port 替换成实际的值。\n取决于 Kubernetes 集群的部署位置，您可能需要在安全组中放行端口并配置相关的端口转发规则。\n","href":"/v2.0/04-radondb-opensearch/03-access-the-database/","isSection":null,"linkkey":null,"title":"访问 OpenSearch 数据库"},{"content":" 本节介绍如何管理 MySQL 数据库用户。\n访问 MySQL 数据库时需要提供用户名和密码。有关如何访问 MySQL 数据库，请参阅访问数据库。\n","href":"/v2.0/02-radondb-mysql/03-manage-database-users/","isSection":null,"linkkey":null,"title":"管理数据库用户"},{"content":" 本节介绍如何管理 Redis Cluster 数据库用户。\n访问 Redis Cluster 数据库时需要提供用户名和密码。有关如何访问 Redis Cluster 数据库，请参阅访问数据库。\n","href":"/v2.0/05-radondb-redis-cluster/03-manage-database-users/","isSection":null,"linkkey":null,"title":"管理数据库用户"},{"content":" 本节介绍如何管理 Redis Sentinel 数据库用户。\n访问 Redis Sentinel 数据库时需要提供用户名和密码。有关如何访问 Redis Sentinel 数据库，请参阅访问数据库。\n","href":"/v2.0/06-radondb-redis-sentinel/03-manage-database-users/","isSection":null,"linkkey":null,"title":"管理数据库用户"},{"content":" 本节介绍如何管理 PostgreSQL 数据库用户。\n","href":"/v2.0/08-radondb-postgresql/03-manage-database-users/","isSection":null,"linkkey":null,"title":"管理数据库用户"},{"content":" 本节介绍如何删除 Kafka 用户。\n前提条件 RadonDB Kafka 实例状态为运行中。\n已创建 Kafka 用户。\n删除单个 Kafka 用户 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击 Kafka 用户页签打开 Kafka 用户列表。\n在需要删除的用户右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入用户的名称，然后点击确定。\n批量删除 Kafka 用户 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击 Kafka 用户页签打开 Kafka 用户列表。\n选择需要删除的用户左侧的复选框，然后在列表上方点击删除。\n在删除对话框，输入用户的名称，然后点击确定。\n备注 请使用半角逗号（,）和空格分隔多个名称。\n","href":"/v2.0/10-radondb-kafka/04-manage-database-users/03-delete-database-users/","isSection":null,"linkkey":null,"title":"删除 Kafka 用户"},{"content":" 本节介绍如何删除数据库备份。\n前提条件 已在 MySQL 或 PostgreSQL 数据库详情页的“备份管理”页签创建了备份。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏点击备份管理 \u0026gt; 备份数据管理。\n点击 MySQL 和 PostgreSQL 页签查看对应数据库的备份。\n找到目标备份，点击，选择删除。\n在弹出的删除对话框，输入备份名称，点击确定。\n","href":"/v2.0/12-backup-management/02-backup-data-management/03-delete-a-backup/","isSection":null,"linkkey":null,"title":"删除数据库备份"},{"content":" 本节介绍如何删除数据库用户。\n前提条件 RadonDB MySQL 实例状态为运行中。\n已创建数据库用户。\n删除单个数据库用户 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签打开数据库用户列表。\n在需要删除的用户右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入用户的名称，然后点击确定。\n批量删除数据库用户 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签打开数据库用户列表。\n选择需要删除的用户左侧的复选框，然后在列表上方点击删除。\n在删除对话框，输入用户的名称，然后点击确定。\n备注 请使用半角逗号（,）和空格分隔多个名称。\n","href":"/v2.0/02-radondb-mysql/03-manage-database-users/03-delete-database-users/","isSection":null,"linkkey":null,"title":"删除数据库用户"},{"content":" 本节介绍如何删除数据库用户。\n前提条件 RadonDB Redis Cluster 实例状态为运行中。\n已创建数据库用户。\n删除单个数据库用户 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Cluster。\n在 Redis Cluster 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签打开数据库用户列表。\n在需要删除的用户右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入用户的名称，然后点击确定。\n批量删除数据库用户 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Cluster。\n在 Redis Cluster 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签打开数据库用户列表。\n选择需要删除的用户左侧的复选框，然后在列表上方点击删除。\n在删除对话框，输入用户的名称，然后点击确定。\n备注 请使用半角逗号（,）和空格分隔多个名称。\n","href":"/v2.0/05-radondb-redis-cluster/03-manage-database-users/03-delete-database-users/","isSection":null,"linkkey":null,"title":"删除数据库用户"},{"content":" 本节介绍如何删除数据库用户。\n前提条件 RadonDB Redis Sentinel 实例状态为运行中。\n已创建数据库用户。\n删除单个数据库用户 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Sentinel。\n在 Redis Sentinel 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签打开数据库用户列表。\n在需要删除的用户右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入用户的名称，然后点击确定。\n批量删除数据库用户 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Sentinel。\n在 Redis Sentinel 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签打开数据库用户列表。\n选择需要删除的用户左侧的复选框，然后在列表上方点击删除。\n在删除对话框，输入用户的名称，然后点击确定。\n备注 请使用半角逗号（,）和空格分隔多个名称。\n","href":"/v2.0/06-radondb-redis-sentinel/03-manage-database-users/03-delete-database-users/","isSection":null,"linkkey":null,"title":"删除数据库用户"},{"content":" 本节介绍如何删除数据库用户。\n前提条件 RadonDB PostgreSQL 实例状态为运行中。\n已创建数据库用户。\n删除单个数据库用户 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签打开数据库用户列表。\n在需要删除的用户右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入用户的名称，然后点击确定。\n批量删除数据库用户 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击数据库用户页签打开数据库用户列表。\n选择需要删除的用户左侧的复选框，然后在列表上方点击删除。\n在删除对话框，输入用户的名称，然后点击确定。\n备注 请使用半角逗号（,）和空格分隔多个名称。\n","href":"/v2.0/08-radondb-postgresql/03-manage-database-users/03-delete-database-users/","isSection":null,"linkkey":null,"title":"删除数据库用户"},{"content":" 本节介绍如何删除 RadonDB Kafka 主题。\n前提条件 RadonDB Kafka 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击主题页签打开主题列表。\n在目标主题右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入主题名称，点击确定。\n","href":"/v2.0/10-radondb-kafka/07-manage-topics/03-delete-topics/","isSection":null,"linkkey":null,"title":"删除主题"},{"content":" 本节介绍如何管理 RadonDB OpenSearch 数据库。\nRadonDB OpenSearch 是一款灵活且可扩展的搜索和分析引擎。提供实时日志处理、全文搜索和数据分析等能力。\n在 KubeSphere 企业版 Web 控制台安装“数据库管理平台”扩展组件后，进入数据库管理平台，即可以容器化的方式部署 OpenSearch 数据库，并通过图形界面对 OpenSearch 数据库进行管理。\n","href":"/v2.0/04-radondb-opensearch/","isSection":null,"linkkey":null,"title":"OpenSearch"},{"content":" 本节介绍如何从备份恢复 RadonDB MySQL 数据库。\n前提条件 RadonDB MySQL 实例状态为运行中。\n您已经创建了 MySQL 数据库备份，且状态为备份成功。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击备份管理页签，找到目标备份任务，点击，选择从备份恢复。\n在基本信息页签，编辑将通过备份创建的实例名称，然后点击下一步。\n在应用设置页签，确认将创建的实例的参数。\n点击确定，将自动创建新的 RadonDB MySQL 实例。\n备注 恢复的新实例的磁盘规格必须大于或等于原实例，以免因磁盘不足导致恢复失败。\n","href":"/v2.0/02-radondb-mysql/06-manage-database-backup/04-restore-database/","isSection":null,"linkkey":null,"title":"从备份恢复 MySQL 数据库"},{"content":" 本节介绍如何从备份恢复 RadonDB PostgreSQL 数据库。\n前提条件 RadonDB PostgreSQL 实例状态为运行中。\n您已经创建了 PostgreSQL 数据库备份，且状态为备份成功。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击备份管理页签，找到目标备份任务，点击，选择从备份恢复。\n在基本信息页签，编辑将通过备份创建的实例名称，然后点击下一步。\n在应用设置页签，确认将创建的实例的参数。\n点击确定，将自动创建新的 RadonDB PostgreSQL 实例。\n备注 恢复的新实例的磁盘规格必须大于或等于原实例，以免因磁盘不足导致恢复失败。\n","href":"/v2.0/08-radondb-postgresql/06-manage-database-backup/04-restore-database/","isSection":null,"linkkey":null,"title":"从备份恢复 PostgreSQL 数据库"},{"content":" 本节介绍如何访问 RadonDB MySQL 数据库。\n前提条件 已获取 KubeSphere 企业版平台登录账号和密码，且已获取平台操作管理权限。\nRadonDB MySQL 实例状态为运行中。\n已获取 MySQL 数据库用户名和密码。有关更多信息，请参阅创建数据库用户。\n通过 KubeSphere 企业版平台访问 以下演示在 KubeSphere 企业版平台访问 RadonDB MySQL 的方式。\n在 KubeSphere 企业版平台右下角工具箱中选择 kubectl 工具，通过 kubectl 工具访问 RadonDB MySQL。\n连接 RadonDB MySQL 数据库的命令如下：\nkubectl exec -it \u0026lt;pod_name\u0026gt; -c mysql -n \u0026lt;project_name\u0026gt; -- mysql --user=\u0026lt;user_name\u0026gt; --password=\u0026lt;user_password\u0026gt; 参数说明：\npod_name 为 MySQL 数据库所在的容器组名称\nproject_name 为 MySQL 数据库所在的项目名称\nuser_name 为 radondb\nuser_password 为 RadonDB@123\n通过 mysql-client 访问 备注 使用如下方式，需提前安装可用于连接 MySQL 数据库的客户端工具。\n当客户端与数据库不在同一 KubeSphere 企业版环境时，可通过配置端口转发、负载均衡等方式连接。\n当客户端与数据库在同一 KubeSphere 企业版环境时，默认通过 service_name 方式连接。\n以下为客户端与数据库在同一 KubeSphere 企业版环境内，通过 service_name 访问 RadonDB MySQL 数据库的方式。\n连接 RadonDB MySQL 数据库的命令如下：\nmysql -h \u0026lt;leader_service_name\u0026gt;.\u0026lt;project_name\u0026gt; -u \u0026lt;user_name\u0026gt; -p 参数的取值示例如下：\nleader_service_name 为 radondb-63jcri-leader（请将 radondb-63jcri 替换为 MySQL 实例的实际名称）\nproject_name 为 test （请将 test 替换为 MySQL 实例所在的项目名称）\nuser_name 为 radondb\nuser_password 为 RadonDB@123\n命令示例如下：\nmysql -h radondb-63jcri-leader.test -u radondb -p 以上 service_name 方式不适用于从 KubeSphere 企业版集群的物理机访问数据库 Pod。若要通过物理机或物理机所在的网络访问 MySQL，需要用 NodePort 暴露该数据库。\n进入 KubeSphere 企业版目标项目。\n点击应用负载 \u0026gt; 服务，找到新建的 MySQL 实例对应的 leader 和 follower 服务，如下图所示。\n点击更多操作 \u0026gt; 编辑外部访问。\n将 leader 和 follower 服务的访问模式设置为 NodePort，点击确定。\n进入 DMP 数据库管理平台，在左侧导航栏点击 MySQL，然后点击已创建的 MySQL 实例进入详情页面。\n在详情页左侧区域，查看读写地址，输入以下命令访问 RadonDB MySQL 数据库。\nmysql -h \u0026lt;leader_service_name\u0026gt;.\u0026lt;project_name\u0026gt; -u \u0026lt;user_name\u0026gt; -p 备注 取决于 Kubernetes 集群的部署位置，您可能需要在安全组中放行端口并配置相关的端口转发规则。\n","href":"/v2.0/02-radondb-mysql/04-access-the-database/","isSection":null,"linkkey":null,"title":"访问 MySQL 数据库"},{"content":" 本节介绍如何访问 RadonDB PostgreSQL 数据库。\n前提条件 已获取 KubeSphere 企业版平台登录账号和密码，且已获取平台操作管理权限。\nRadonDB PostgreSQL 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在详情页右侧的概览区域，查看容器组的名称。\n执行以下命令访问 PostgreSQL 数据库：\nkubectl exec -it -n \u0026lt;namespace\u0026gt; \u0026lt;pod_name\u0026gt; -- bash \u0026lt;namespace\u0026gt;：PostgreSQL 实例所在的命名空间（即项目名称）。\n\u0026lt;pod_name\u0026gt;：PostgreSQL 容器组的名称。\n示例命令如下所示：\nkubectl exec -it -n test radondb-cd5s9b-autofailover-0-0 -- bash ","href":"/v2.0/08-radondb-postgresql/04-access-the-database/","isSection":null,"linkkey":null,"title":"访问 PostgreSQL 数据库"},{"content":" 本节介绍如何访问 RadonDB RabbitMQ。\n前提条件 已获取 KubeSphere 企业版平台登录账号和密码，且已获取平台操作管理权限。\nRadonDB RabbitMQ 实例状态为运行中。\n操作步骤 根据是否配置 TLS，访问 RabbitMQ 的方式略有不同。\n未配置 TLS 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 RabbitMQ。\n在 RabbitMQ 实例列表中，点击一个实例名称打开其详情页面。\n在详情页左侧，查看访问地址，示例如下。\n在参数管理页签，查看默认的用户名 default_user（默认为 guest）和用户名密码 default_pass（默认为 guest）。\n将鼠标悬停至 Web 控制台右下角的，点击 kubectl，在弹出的对话框执行以下命令访问 RabbitMQ。\n若在集群内部访问 RabbitMQ，执行以下命令：\nrabbitmqadmin --host=\u0026lt;instance_name\u0026gt;.\u0026lt;namespace\u0026gt; --port=15672 --username=\u0026lt;user\u0026gt; --password=\u0026lt;password\u0026gt; \u0026lt;instance_name\u0026gt;：RabbitMQ 实例的名称。\n\u0026lt;namespace\u0026gt;：RabbitMQ 实例所在的命名空间（即项目名称）。\nport 默认为 15672，可以不指定 --port 参数。\n\u0026lt;user\u0026gt;：默认为 guest。如果通过命令行新增了 RabbitMQ 用户，请替换为新用户名。\n\u0026lt;password\u0026gt;：默认为 guest。如果通过命令行新增了 RabbitMQ 用户，请替换为新用户的密码。\n示例命令如下：\nrabbitmqadmin --host=radondb-feoed2.test --port=15672 --username=guest --password=guest 若在集群外部访问 RabbitMQ，执行以下命令：\nrabbitmqadmin --host=\u0026lt;instance_address\u0026gt; --port=\u0026lt;NodePort\u0026gt; --username=\u0026lt;user\u0026gt; --password=\u0026lt;password\u0026gt; \u0026lt;instance_address\u0026gt;：RabbitMQ 实例的连接地址，如上图所示的 172.31.73.234。在实例详情页面的左侧区域查看对应的 IP 地址，并替换为实际地址。\n\u0026lt;NodePort\u0026gt;：RabbitMQ 实例的端口号，如上图所示的 32694。请替换为实际端口号。\n\u0026lt;user\u0026gt;：默认为 guest。如果通过命令行新增了 RabbitMQ 用户，请替换为新用户名。\n\u0026lt;password\u0026gt;：默认为 guest。如果通过命令行新增了 RabbitMQ 用户，请替换为新用户的密码。\n示例命令如下：\nrabbitmqadmin --host=172.31.73.234 --port=32694 --username=guest --password=guest 已配置 TLS 若已配置 TLS，访问 RabbitMQ 的步骤同上，仅执行的命令不同。\n配置 TLS 后，在集群内部访问 RabbitMQ，执行以下命令：\nrabbitmqadmin --host=\u0026lt;instance_name\u0026gt;.\u0026lt;namespace\u0026gt; --port=15672 --username=\u0026lt;user\u0026gt; --password=\u0026lt;password\u0026gt; --ssl --ssl-key-file=/path/to/client_key.pem --ssl-cert-file=/path/to/client_certificate.pem \u0026lt;instance_name\u0026gt;：RabbitMQ 实例的名称。\n\u0026lt;namespace\u0026gt;：RabbitMQ 实例所在的命名空间（即项目名称）。\nport 默认为 15672，可以不指定 --port 参数。\n\u0026lt;user\u0026gt;：默认为 guest。如果通过命令行新增了 RabbitMQ 用户，请替换为新用户名。\n\u0026lt;password\u0026gt;：默认为 guest。如果通过命令行新增了 RabbitMQ 用户，请替换为新用户的密码。\n将 /path/to/client_certificate.pem 和 /path/to/client_key.pem 替换为实际的路径。\n配置 TLS 后，在集群外部访问 RabbitMQ，执行以下命令：\nrabbitmqadmin --host=\u0026lt;instance_address\u0026gt; --port=\u0026lt;NodePort\u0026gt; --username=\u0026lt;user\u0026gt; --password=\u0026lt;password\u0026gt; --ssl --ssl-key-file=/path/to/client_key.pem --ssl-cert-file=/path/to/client_certificate.pem \u0026lt;instance_address\u0026gt;：RabbitMQ 实例的连接地址，如上图所示的 172.31.73.234。在实例详情页面的左侧区域查看对应的 IP 地址，并替换为实际地址。\n\u0026lt;NodePort\u0026gt;：RabbitMQ 实例的端口号，如上图所示的 32694。请替换为实际端口号。\n\u0026lt;user\u0026gt;：默认为 guest。如果通过命令行新增了 RabbitMQ 用户，请替换为新用户名。\n\u0026lt;password\u0026gt;：默认为 guest。如果通过命令行新增了 RabbitMQ 用户，请替换为新用户的密码。\n将 /path/to/client_key.pem 和 /path/to/client_certificate.pem 替换为实际的路径。\n","href":"/v2.0/11-radondb-rabbitmq/04-access-rabbitmq/","isSection":null,"linkkey":null,"title":"访问 RabbitMQ"},{"content":" 本节介绍如何管理 Kafka 用户。\n访问 Kafka 时需要提供用户名和密码。有关如何访问 Kafka，请参阅访问 Kafka。\n","href":"/v2.0/10-radondb-kafka/04-manage-database-users/","isSection":null,"linkkey":null,"title":"管理 Kafka 用户"},{"content":" 本节介绍如何管理 RadonDB Redis Cluster 数据库。\nRadonDB Redis Cluster 是一款完全基于云原生技术的缓存数据库产品。通过在 Kubernetes 上进行 Redis Cluster 模式设置，为您提供即开即用、安全可靠、弹性扩容、便捷易用的在线分布式缓存能力。\n在 KubeSphere 企业版 Web 控制台安装“数据库管理平台”扩展组件后，进入数据库管理平台，即可以容器化的方式部署 Redis Cluster 数据库，并通过图形界面对 Redis Cluster 数据库进行管理。\n","href":"/v2.0/05-radondb-redis-cluster/","isSection":null,"linkkey":null,"title":"Redis Cluster"},{"content":" 本节介绍如何访问 RadonDB Kafka。\n前提条件 已获取 KubeSphere 企业版平台登录账号和密码，且已获取平台操作管理权限。\nRadonDB Kafka 实例状态为运行中。\n已安装用于访问 Kafka 的客户端。\n下载 CA 证书和用户证书 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面左侧的传输密码区域，下载 CA 证书并保存密码。\n在页面右侧点击 Kafka 用户页签，将鼠标悬浮在加密密钥列的 CA 证书上，下载用户证书并保存密码。\n修改 Kafka 配置文件 RadonDB Kafka 支持三种认证类型：TLS、SCRAM-SHA-512 和无需认证。其使用的认证类型可在详情页的参数管理页签中查看。不同的认证模式下，配置文件的修改方式不同。\n在修改配置文件之前，请先下载并解压 Kafka 客户端二进制包。\nTLS 认证类型 备注 当认证类型为 TLS 时，参数管理页签的 TLS 参数不能设置为 false。\n在 Kafka 二进制包中的 config/producer.properties 和 config/consumer.properties 文件末尾添加下面的内容。\n#在文件末尾添加以下内容。 security.protocol=ssl ssl.truststore.location=\u0026lt;ca.p12\u0026gt; ssl.truststore.password=\u0026lt;truststore_password\u0026gt; ssl.truststore.type=pkcs12 ssl.keystore.location=\u0026lt;user.p12\u0026gt; ssl.keystore.password=\u0026lt;keystore_password\u0026gt; ssl.keystore.type=pkcs12 ssl.endpoint.identification.algorithm= 参数说明如下：\n\u0026lt;ca.p12\u0026gt;：CA 证书的保存路径。\n\u0026lt;truststore_password\u0026gt;：CA 证书的密码。\n\u0026lt;user.p12\u0026gt;：用户证书的保存路径。\n\u0026lt;keystore_password\u0026gt;：用户证书的密码。\nSCRAM-SHA-512 认证类型 备注 当认证类型设置为 SCRAM-SHA-512，参数管理页签的 TLS 的值可以设置为 true 和 false。\n当 TLS 的值设置为 true 时，在 Kafka 二进制包中的 config/producer.properties 和 config/consumer.properties 文件末尾添加以下内容。\n#在文件末尾添加以下内容。 security.protocol=sasl_ssl sasl.mechanism=SCRAM-SHA-512 ssl.truststore.location=\u0026lt;ca.p12\u0026gt; ssl.truststore.password=\u0026lt;truststore_password\u0026gt; ssl.truststore.type=pkcs12 ssl.endpoint.identification.algorithm= 参数说明如下：\n\u0026lt;ca.p12\u0026gt;：CA 证书的保存路径。\n\u0026lt;truststore_password\u0026gt;：CA 证书的密码。\n当 TLS 的值设置为 false 时，在 Kafka 二进制包中的 config/producer.properties 和 config/consumer.properties 文件末尾添加以下内容。\n#在文件末尾添加以下内容。 security.protocol=SASL_PLAINTEXT sasl.mechanism=SCRAM-SHA-512 ssl.endpoint.identification.algorithm= 创建 config/kafka_client_jaas.conf 文件，并添加以下内容。\n\u0026gt; cat config/kafka_client_jaas.conf KafkaClient { org.apache.kafka.common.security.scram.ScramLoginModule required username=\u0026#34;username\u0026#34; password=\u0026#34;password\u0026#34;; }; 将 username 和 password 修改为实际的 Kafka 用户名和密码。\n执行以下命令修改 Kafka 二进制包中的 bin/kafka-console-producer.sh 和 bin/kafka-console-consumer.sh 文件。\n#修改 bin/kafka-console-producer.sh 文件。 if [ \u0026#34;x$KAFKA_HEAP_OPTS\u0026#34; = \u0026#34;x\u0026#34; ]; then export KAFKA_HEAP_OPTS=\u0026#34;-Xmx512M -Djava.security.auth.login.config=/opt/kafka/config/kafka_client_jaas.conf\u0026#34; fi exec $(dirname $0)/kafka-run-class.sh kafka.tools.ConsoleProducer \u0026#34;$@\u0026#34; if [ \u0026#34;x$KAFKA_HEAP_OPTS\u0026#34; = \u0026#34;x\u0026#34; ]; then export KAFKA_HEAP_OPTS=\u0026#34;-Xmx512M -Djava.security.auth.login.config=/opt/kafka/config/kafka_client_jaas.conf\u0026#34; fi exec $(dirname $0)/kafka-run-class.sh kafka.tools.ConsoleConsumer \u0026#34;$@\u0026#34; 备注 请将 config/kafka_client_jaas.conf 的地址根据实际情况修改为绝对地址。\n无需认证模式 当认证类型设置为无需认证，TLS 的值可以设置为 true 和 false。\n当 TLS 的值为 true 时，在 Kafka 二进制包中的 config/producer.properties 和 config/consumer.properties 文件后增加以下内容：\n#在文件末尾添加以下内容。 security.protocol=SSL ssl.truststore.location=\u0026lt;ca.p12\u0026gt; ssl.truststore.password=\u0026lt;truststore_password\u0026gt; ssl.truststore.type=pkcs12 ssl.endpoint.identification.algorithm= 参数说明如下：\n\u0026lt;ca.p12\u0026gt;：CA 证书的保存路径。\n\u0026lt;truststore_password\u0026gt;：CA 证书的密码。\n当 TLS 的值为 false 时，您无需做任何修改。\n使用 Kafka 客户端生产和消费消息 执行以下命令使用 Kafka 客户端生产和消费消息。\n生产消息\n# bin/kafka-console-producer.sh --bootstrap-server 192.168.100.2:31522 --topic demo-topic --producer.config config/producer.properties \u0026gt;hello \u0026gt;radondb \u0026gt;kafka 消费消息\n# bin/kafka-console-consumer.sh --bootstrap-server 192.168.100.2:31522 --topic demo-topic --consumer.config config/consumer.properties hello radondb kafka 其中，bootstrap-server，即命令中的 192.168.100.2:31522，需要修改为 Kafka 实例详情页左侧的访问地址，如下图所示。topic，即命令中的 demo-topic，需要修改为实际使用的主题名称。\n备注 上图框中第一个读写地址是使用 Kubernetes 节点网络访问 Kafka 服务时使用的地址，如在 Kubernetes 节点上访问 Kafka，或 Kubernetes 节点同网段主机上访问 Kafka 服务。第二个读写地址是使用 Kubernetes 集群中 pod 访问 kafka 服务时使用的地址。\n","href":"/v2.0/10-radondb-kafka/05-access-kafka/","isSection":null,"linkkey":null,"title":"访问 Kafka "},{"content":" 本节介绍如何访问 RadonDB Redis Cluster 数据库。\n前提条件 已获取 KubeSphere 企业版平台登录账号和密码，且已获取平台操作管理权限。\nRadonDB Redis Cluster 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Cluster。\n在 Redis Cluster 实例列表中，点击一个实例名称打开其详情页面。\n将鼠标悬停至 Web 控制台右下角的，点击 kubectl，在弹出的对话框执行以下命令进入 Redis 数据库。\nkubectl exec -it -n \u0026lt;namespace\u0026gt; \u0026lt;name\u0026gt;-leader-0 -- sh \u0026lt;namespace\u0026gt;：Redis Cluster 实例所在的命名空间（即项目名称）。\n\u0026lt;name\u0026gt;：Redis Cluster 实例的名称。\n连接 Redis Cluster 数据库。\nredis-cli -h \u0026lt;redis_instance_address\u0026gt; -p \u0026lt;port\u0026gt; -c \u0026lt;redis_instance_address\u0026gt;： Redis Cluster 数据库的连接地址，如 10.233.85.29。可在实例详情页面的概览区域查看对应的容器组 IP 地址，请根据实际地址替换。\n\u0026lt;port\u0026gt;： Redis Cluster 数据库的端口号，默认为 6379。\n-c：连接数据库节点时的必选参数。\n连接示例如下：\nredis-cli -h 10.233.85.29 -p 6379 -c 如果 Redis Cluster 实例设置了访问密码，执行以下命令完成密码验证。\nAUTH \u0026lt;password\u0026gt; 备注 如果在创建 Redis 实例时设置了密码，直接替换 \u0026lt;password\u0026gt; 为您设置的密码即可。\n如果是新创建的数据库用户，则填写 \u0026lt;user\u0026gt; \u0026lt;password\u0026gt;。例如：账号为 test，密码为 Test@123，则执行 auth test Test@123。\n密码验证成功后，会返回 OK。\n执行以下命令查看节点信息。\ncluster nodes ","href":"/v2.0/05-radondb-redis-cluster/04-access-the-database/","isSection":null,"linkkey":null,"title":"访问 Redis Cluster 数据库"},{"content":" 本节介绍如何访问 RadonDB Redis Sentinel 数据库。\n前提条件 已获取 KubeSphere 企业版平台登录账号和密码，且已获取平台操作管理权限。\nRadonDB Redis Sentinel 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Sentinel。\n在 Redis Sentinel 实例列表中，点击一个实例名称打开其详情页面。\n将鼠标悬停至 Web 控制台右下角的，点击 kubectl，在弹出的对话框执行以下命令进入 Redis 数据库。\nkubectl exec -it -n \u0026lt;namespace\u0026gt; \u0026lt;name\u0026gt; -- sh \u0026lt;namespace\u0026gt;：Redis Sentinel 实例所在的命名空间（即项目名称）。\n\u0026lt;name\u0026gt;：Redis Sentinel 实例的名称，如 radondb-mfncrc-sentinel-2。\n连接 Redis Sentinel 数据库。\nredis-cli -h \u0026lt;redis_instance_address\u0026gt; -p \u0026lt;port\u0026gt; \u0026lt;redis_instance_address\u0026gt;：Redis Sentinel 数据库的连接地址，如 10.233.116.42。可在实例详情页面的概览区域查看连接地址，请根据实际地址替换。\n\u0026lt;port\u0026gt;：Redis Sentinel 数据库的端口号，默认为 6379。\n连接示例如下：\nredis-cli -h 10.233.116.42 -p 6379 如果 Redis Sentinel 实例设置了访问密码，执行以下命令完成密码验证。\nAUTH \u0026lt;password\u0026gt; 备注 如果在创建 Redis 实例时设置了密码，直接替换 \u0026lt;password\u0026gt; 为您设置的密码即可。\n如果是新创建的数据库用户，则填写 \u0026lt;user\u0026gt; \u0026lt;password\u0026gt;。例如：账号为 test，密码为 Test@123，则执行 auth test Test@123。\n密码验证成功后，会返回 OK。\n执行以下命令查看节点信息。\nrole ","href":"/v2.0/06-radondb-redis-sentinel/04-access-the-database/","isSection":null,"linkkey":null,"title":"访问 Redis Sentinel 数据库"},{"content":" 本节介绍如何删除 RadonDB MySQL 数据库备份。\n前提条件 RadonDB MySQL 实例状态为运行中。\n您已经创建了 MySQL 数据库备份。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击备份管理页签，找到目标备份，点击，选择删除。\n在弹出的删除对话框，输入备份名称，点击确定。\n","href":"/v2.0/02-radondb-mysql/06-manage-database-backup/05-delete-database-backup/","isSection":null,"linkkey":null,"title":"删除 MySQL 数据库备份"},{"content":" 本节介绍如何删除 RadonDB PostgreSQL 数据库备份。\n前提条件 RadonDB PostgreSQL 实例状态为运行中。\n您已经创建了 PostgreSQL 数据库备份。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面右侧点击备份管理页签，找到目标备份，点击，选择删除。\n在弹出的删除对话框，输入备份名称，点击确定。\n","href":"/v2.0/08-radondb-postgresql/06-manage-database-backup/05-delete-database-backup/","isSection":null,"linkkey":null,"title":"删除 PostgreSQL 数据库备份"},{"content":" 本节介绍如何修改 RadonDB OpenSearch 数据库的配置参数。\nRadonDB OpenSearch 实例支持编辑配置参数，通过管理配置参数可调优数据库性能，并可启用数据库高可用性能。\n警告 修改部分配置参数后，OpenSearch 服务会重启，造成业务中断。请谨慎操作。\n前提条件 RadonDB OpenSearch 实例状态为运行中。\n修改配置参数 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 OpenSearch。\n在 OpenSearch 实例列表中，点击一个实例名称打开其详情页面。\n点击页面右侧的参数管理页签，点击编辑即可修改配置参数。\n点击确定保存。\n参数简介 参数 说明 thread_pool.write.queue_size\n线程池写队列的大小。取值范围为 1000 ~ 20000， 默认值为 10000。\nthread_pool.search.queue_size\n线程池搜索队列的大小。取值范围为 1000 ~ 20000， 默认值为 1000。\naction.destructive_requires_name\n是否在删除索引时禁止使用通配符和 _all 。您可以将此参数设置为 false，以允许使用通配符和 _all。默认值为 true。\nhttp.cors.enabled\n是否启用跨域资源共享（CORS）。默认值为 false。\nhttp.cors.allow-origin\n可用于跨域资源共享（CORS）的域（origin）。\nindices.fielddata.cache.size\n可用作字段数据缓存的最大堆内存。默认值为 -1b。\nindices.memory.index_buffer_size\n分配给节点并由所有分片作为索引缓冲区共享的堆内存大小。参数值可以为百分比或字节数。默认值为 10%。\nindices.queries.cache.size\n过滤器缓存的内存大小。取值可以为百分比（例如 5%）或确切值（例如 512mb）。默认值为10%。默认值为 10%。\nindices.requests.cache.size\n在节点级管理的分片请求缓存大小。默认值为堆内存的 1%。\nreindex.remote.whitelist\n列入白名单以进行 Reindex 操作的远程节点的地址。您可以用使用半角逗号（,）分隔多个地址（例如 otherhost:9200, 192.168.1.:9200, localhost:）。\n","href":"/v2.0/04-radondb-opensearch/05-manage-parameters/","isSection":null,"linkkey":null,"title":"修改数据库配置参数"},{"content":" 本节介绍如何修改 RadonDB MongoDB 数据库的配置参数。\nRadonDB MongoDB 实例支持编辑配置参数，通过管理配置参数可调优数据库性能，并可启用数据库高可用性能。\n警告 修改部分配置参数后，MongoDB 服务会重启，造成业务中断。请谨慎操作。\n前提条件 RadonDB MongoDB 实例状态为运行中。\n修改配置参数 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MongoDB。\n在 MongoDB 实例列表中，点击一个实例名称打开其详情页面。\n点击页面右侧的参数管理页签，点击编辑即可修改配置参数。\n点击确定保存。\n参数简介 参数 说明 port\nMongoDB 服务器监听的端口号。默认值为 27017。\noplogSizeMB\noplog 文件的大小上限，单位为 MB。默认值为 10240 MB。\nmaxIncomingConnections\nmongos 或 mongod 接受的最大同时连接数量。\nprofilingMode\n是否启用性能分析（Profiling）模式，即是否开启慢查询检测。\n默认值为 off，表示不收集任何慢查询。\nslowOp：表示根据 slowOpThresholdMs 参数收集慢查询数据。\nall：表示开启全局慢查询检测，即收集任何操作记录的数据。\nslowOpThresholdMs\n慢操作时间阈值。花费时间大于此参数值的操作将被视为慢操作。\nenableMajorityReadConcern\n是否使用安全读取策略。默认为 true，表示只能读取到成功写入到大多数节点的数据。\n修改此参数值将导致数据库服务重启。\nsystemLog.component.command.verbosity\n命令相关组件的日志记录级别。\n默认值为 0，记录 Informational 级别日志。\n设置为 1，会记录所有的请求日志。\nsystemLog.component.indexVerbosity\n索引操作相关组件的日志记录级别。\n默认值为 0，记录 Informational 级别日志。\n设置为 1，会记录所有的请求日志。\nsystemLog.component.queryVerbosity\n查询操作相关组件的日志记录级别。\n默认值为 0，记录 Informational 级别日志。\n设置为 1，会记录所有的请求日志。\nsystemLog.component.networkVerbosity\n组网操作相关组件的日志记录级别。\n默认值为 0，记录 Informational 级别日志。\n设置为 1，会记录所有的请求日志。\nsystemLog.component.writeVerbosity\n写入操作相关组件的日志记录级别。\n默认值为 0，记录 Informational 级别日志。\n设置为 1，会记录所有的请求日志。\n","href":"/v2.0/07-radondb-mongodb/05-manage-parameters/","isSection":null,"linkkey":null,"title":"修改数据库配置参数"},{"content":" 本节介绍如何管理 RadonDB Redis Sentinel 数据库。\nRadonDB Redis Sentinel 是一款完全基于云原生技术的缓存数据库产品。通过在 Kubernetes 上进行 Redis Sentinel 模式设置，为您提供即开即用、安全可靠、弹性扩容、便捷易用的在线分布式缓存能力。\n在 KubeSphere 企业版 Web 控制台安装“数据库管理平台”扩展组件后，进入数据库管理平台，即可以容器化的方式部署 Redis Sentinel 数据库，并通过图形界面对 Redis Sentinel 数据库进行管理。\n","href":"/v2.0/06-radondb-redis-sentinel/","isSection":null,"linkkey":null,"title":"Redis Sentinel"},{"content":" 本节介绍如何管理 RadonDB MySQL 数据库备份，包括开启数据库自动备份、手动创建数据库备份、查看数据库备份、从备份恢复数据库、以及删除数据库备份。\n","href":"/v2.0/02-radondb-mysql/06-manage-database-backup/","isSection":null,"linkkey":null,"title":"管理数据库备份"},{"content":" 本节介绍如何管理 RadonDB PostgreSQL 数据库备份，包括开启数据库自动备份、手动创建数据库备份、查看数据库备份、从备份恢复数据库、以及删除数据库备份。\n","href":"/v2.0/08-radondb-postgresql/06-manage-database-backup/","isSection":null,"linkkey":null,"title":"管理数据库备份"},{"content":" 本节介绍如何扩展 RadonDB OpenSearch 数据库的节点。\n警告 若选择节点数低于当前节点数，将删除超出的节点。\n扩展节点可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB OpenSearch 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 OpenSearch。\n在 OpenSearch 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展。\n在扩展对话框，选择节点角色并设置节点的数量，然后点击确定。待实例状态切换为运行中，则新增节点完成。\n","href":"/v2.0/04-radondb-opensearch/06-scale-out-the-database-cluster/","isSection":null,"linkkey":null,"title":"扩展数据库节点"},{"content":" 本节介绍如何扩展 RadonDB MongoDB 数据库的节点。\n警告 若选择节点数低于当前节点数，将删除超出的节点。\n扩展节点可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB MongoDB 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MongoDB。\n在 MongoDB 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展。\n在扩展对话框，选择节点的数量，然后点击确定。待实例状态切换为运行中，则新增节点完成。\n","href":"/v2.0/07-radondb-mongodb/06-scale-out-the-database-cluster/","isSection":null,"linkkey":null,"title":"扩展数据库节点"},{"content":" 本节介绍如何管理 RadonDB MongoDB 数据库。\nRadonDB MongoDB 是一款基于 MongoDB 副本集技术的分布式文档数据库。支持 MongoDB 数据库部署和全生命周期管理。\n在 KubeSphere 企业版 Web 控制台安装“数据库管理平台”扩展组件后，进入数据库管理平台，即可以容器化的方式部署 MongoDB 数据库，并通过图形界面对 MongoDB 数据库进行管理。\n","href":"/v2.0/07-radondb-mongodb/","isSection":null,"linkkey":null,"title":"MongoDB"},{"content":" 本节介绍如何调整 RadonDB OpenSearch 数据库的 CPU 和内存资源。\n警告 此操作可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB OpenSearch 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 OpenSearch。\n在 OpenSearch 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 调整资源。\n在调整资源对话框，选择节点角色，设置分配给每个节点的 CPU 和内存资源数量，然后点击确定。\n","href":"/v2.0/04-radondb-opensearch/07-adjust-cpu-and-memory-resources/","isSection":null,"linkkey":null,"title":"调整 CPU 和内存资源"},{"content":" 本节介绍如何调整 RadonDB MongoDB 数据库的 CPU 和内存资源。\n警告 此操作可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB MongoDB 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MongoDB。\n在 MongoDB 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 调整资源。\n在调整资源对话框，设置分配给每个节点的 CPU 和内存资源数量，然后点击确定。\n","href":"/v2.0/07-radondb-mongodb/07-adjust-cpu-and-memory-resources/","isSection":null,"linkkey":null,"title":"调整 CPU 和内存资源"},{"content":" 本节介绍如何管理 RadonDB Kafka 主题。\n","href":"/v2.0/10-radondb-kafka/07-manage-topics/","isSection":null,"linkkey":null,"title":"管理主题"},{"content":" 本节介绍如何修改 RadonDB RabbitMQ 的配置参数。\nRadonDB RabbitMQ 实例支持编辑配置参数，通过管理配置参数可调优服务性能，并可启用高可用性能。\n警告 修改部分配置参数后，RabbitMQ 服务会重启，造成业务中断。请谨慎操作。\n前提条件 RadonDB RabbitMQ 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 RabbitMQ。\n在 RabbitMQ 实例列表中，点击一个实例名称打开其详情页面。\n点击页面右侧的参数管理页签，点击编辑即可修改配置参数。\n点击确定保存。\n参数简介 参数 说明 节点端口\n是否启用 NodePort 以便从集群外部访问。\ncluster_partition_handling\n网络分区处理策略。\ncluster_keepalive_interval\n向集群里的其他子节点发送存活消息的间隔，单位为 ms。取值范围为 1000–51200。\nqueue_master_locator\n队列主节点的策略。\npeer_discovery_backend\n指定集群节点发现机制。\naddress_type\n访问其他节点时使用的方式。\nhostname\nKubernetes API 主机名。\nnum_acceptors.tcp\n接收 tcp 连接的 erlang 进程数。\nhandshake_timeout\n连接超时时间，单位 ms。\nnum_acceptors.ssl\n接收 tls 连接的 erlang 进程数。\nvm_memory_high_watermark.relative\n内存阈值, 绝对值。\nvm_memory_calculation_strategy\n内存使用情况报告策略。\nvm_memory_high_watermark_paging_ratio\n分页阈值。\ndisk_free_limit.relative\n可用磁盘阈值，相对值。\ndisk_free_limit.absolute\n可用磁盘阈值，绝对值。\nlog.file.level\n日志级别。\nchannel_max\n最大 channel 数量。\nmax_message_size\n允许的最大消息负载大小，单位 bytes。\nheartbeat\n心跳超时时间。\ndefault_user\n默认用户。\ndefault_pass\n默认用户密码。\ndefault_user_tags.administrator\n默认用户标签。\ndefault_permissions.configure\n默认用户的 configure 权限。\ndefault_permissions.read\n默认用户的 read 权限。\ndefault_permissions.write\n默认用户的 write 权限。\ncollect_statistics\n统计相关，与web管理插件显示有关。\ncollect_statistics_interval\n配置发送当前 broker 的时间间隔，单位 ms。\ndelegate_count\n用于集群内通信的代表进程数。\nqueue_index_embed_msgs_below\n在消息的字节数中，消息将被直接嵌入到队列索引中。\nmnesia_table_loading_retry_timeout\n等待集群中的 Mnesia tables 变得可用时使用的超时时间，单位 ms。\nmnesia_table_loading_retry_limit\n在等待集群中的 Mnesia tables 可用时，需要重试的次数。\nmirroring_sync_batch_size\n在消息中镜像同步批量大小。\nproxy_protocol\n设置是否启用代理。\n","href":"/v2.0/11-radondb-rabbitmq/07-manage-parameters/","isSection":null,"linkkey":null,"title":"修改配置参数"},{"content":" 本节介绍如何修改 RadonDB MySQL 数据库的配置参数。\nRadonDB MySQL 实例支持编辑配置参数，通过管理配置参数可调优数据库性能，并可启用数据库高可用性能。\n警告 修改部分配置参数后，MySQL 服务会重启，造成业务中断。请谨慎操作。\n前提条件 RadonDB MySQL 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n点击页面右侧的参数管理页签，点击编辑即可修改配置参数。\n点击确定保存。\n参数简介 日志参数 参数 说明 Audit_log_policy\n审计日志插件将事件写入其日志文件时采用的策略。\nAudit_log_format\n审计日志文件格式。\nAudit_log_rotate_on_size\n单个审计日志文件的大小。默认值 104857600。\n如果参数值不是 4096 的整数倍，参数值将被下调为 4096 的整数倍。\nAudit_log_rotations\n审计日志文件的最大数量。默认值 6，表示最多保留 6 个文件。\nExpire_logs_days\n二进制日志文件的保留期限，单位为天。\n默认值 7，表示日志最长保留 7 天。\n性能参数 参数 说明 Innodb_buffer_pool_size\n缓冲池大小。最多可以分配 80% 的内存。\n若该值为 -1，该参数设置为内存的 60%。\nCharacter_set_server\n数据库服务器的默认字符集。\n默认值 utf8mb4。\nLong_query_time\n慢查询时间阈值。花费时间大于此参数值的 SQL 语句将被视为慢查询，单位为秒。\n默认值 3，表示慢日志查询时间为 3 秒。\nMax_connections\n同时处理请求的最大连接数量。默认值 1024。\nMax_connect_errors\n最大连接错误次数。该参数是 MySQL 中与安全有关的计数器值，负责阻止过多尝试失败的客户端以防止暴力破解密码。默认值 655360。\nWait_timeout\n数据库服务器等待非交互连接的最大时间，单位为秒。超过时间限制后连接将被关闭。\n默认值 3600，表示等待超时时间为 1 小时。\nMax_allowed_packet\n接收数据包的大小上限。默认值 1073741824。\n若该值不是 1024 的整数倍，将下调到 1024 的整数倍；若需修改该参数，须保证 slave_pending_jobs_size_max 值大于等于该参数值，否则可能会导致主从复制异常。\nSlave_parallel_workers\n并行复制线程的数量。默认值 8。\nSkip-name-resolve\n是否禁止域名解析。\n默认值 0，表示禁用。\nAutocommit\n是否启用自动提交模式。\n默认值 1，表示启用自动提交功能。\nTransaction_isolation\n事务隔离级别。\n默认值 READ-COMMITTED，表示读提交不允许脏读，但允许不可重复读。\nInnodb_flush_method\nInnoDB 数据文件及 redo log 的打开、刷写模式。\n默认值 O_DIRECT，表示 InnoDB 使用 O_DIRECT 打开数据文件，使用 fsync()刷写数据文件跟 redo log。\nInnodb_use_native_aio\nInnoDB 的 AIO 特性开关。\n默认值 1，表示启用 AIO 特性。\n","href":"/v2.0/02-radondb-mysql/07-manage-parameters/","isSection":null,"linkkey":null,"title":"修改数据库配置参数"},{"content":" 本节介绍如何修改 RadonDB Redis Cluster 数据库的配置参数。\nRadonDB Redis Cluster 实例支持编辑配置参数，通过管理配置参数可调优数据库性能，并可启用数据库高可用性能。\n警告 修改部分配置参数后，Redis Cluster 服务会重启，造成业务中断。请谨慎操作。\n前提条件 RadonDB Redis Cluster 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Cluster。\n在 Redis Cluster 实例列表中，点击一个实例名称打开其详情页面。\n点击页面右侧的参数管理页签，点击编辑即可修改配置参数。\n点击确定保存。\n参数简介 参数 说明 外部访问\n是否使用域名从 KubeSphere 集群外部访问数据库分片。\nmaxmemory\nRedis 可用内存的上限，单位为 MB。默认值为 974。\nactiverehashing\n是否启用重哈希以节省内存。默认值为 yes。\nappendonly\n是否启用 AOF 持久性。默认值为 yes。\nappendfsync\nAOF 同步策略。默认值为 everysec。\ncluster-node-timeout\nRedis 集群节点不可用时间上限，单位为毫秒。超过上限后，Redis 集群节点将被视为故障。取值范围为 1000~6000000。默认值为 15000。\nlatency-monitor-threshold\n慢操作时间阈值，单位为毫秒。花费时间超过此参数值的操作将被写入日志。取值 0 表示禁用此功能。\nmaxclients\n客户端连接的最大数量。取值 0（默认值）表示不限制客户端连接数。默认值为 102400。\nmaxmemory-policy\nRedis 内存使用量达到上限时采取的策略。\nmaxmemory-samples\nRedis 内存使用量达到上限时，Redis 驱逐算法采用的样本数量。默认值为 3。\nmin-slaves-max-lag\n至少存在 min-slaves-to-write 个从数据库，并且这些从数据库的网络延迟不超过此参数值时，主数据库才能允许写操作。默认值为 10。\nmin-slaves-to-write\n请参考 min-slaves-max-lag 的描述信息。\nno-appendfsync-on-rewrite\nBGSAVE 或 BGREWRITEAOF 操作正在进行时是否阻止 fsync() 调用。\nnotify-keyspace-events\nRedis 发送的通知类型。\nrepl-backlog-size\n复制 backlog 文件的大小。\nrepl-backlog-ttl\n复制 backlog 文件的保留期限。取值范围为 1~864000，默认值为 3600。\nrepl-timeout\n复制超时时间。取值范围为 1~864000，默认值为 60。\nset-max-intset-entries\n当 set 对象完全由十进制 64 位带符号整数组成，并且 set 中元素数量不超过此参数的值时，使用 Intset 编码。\nslowlog-log-slower-than\n最大操作执行时间，单位为微秒。超过此参数值的操作将被记录到 slowlog 中。取值范围为 -1~60000000，默认值为 -1。\nslowlog-max-len\nslowlog 的最大长度。\nhash-max-ziplist-entries\n当 hash 对象同时满足以下两个条件时，采用 Ziplist 编码：1. hash 对象每个键和每个值的长度（单位为字节）不超过 hash-max-ziplist-value 值；2. hash 对象中的键值对数量不超过 hash-max-ziplist-entries 值。\nhash-max-ziplist-value\n请参考 hash-max-ziplist-entries 的描述信息。\nlist-max-ziplist-entries\n当 list 对象同时满足以下两个条件时，采用 Ziplist 编码：1. list 对象元素的长度（单位为字节）不超过 list-max-ziplist-value 值；2. list 对象中的元素数量不超过 list-max-ziplist-entries 值。\nlist-max-ziplist-value\n请参考 list-max-ziplist-entries 的描述信息。\nzset-max-ziplist-entries\n当 zset 对象同时满足以下两个条件时，采用 Ziplist 编码：1. zset 对象元素的长度（单位为字节）不超过 zset-max-ziplist-value 值；2. zset 对象中的元素数量不超过 zset-max-ziplist-entries 值。\nzset-max-ziplist-value\n请参考 zset-max-ziplist-entries 的描述信息。\nlua-time-limit\nLua 脚本超时时间，单位为毫秒。取值 0 或负值表示不设置超时时间。\nio-threads-do-reads\n是否启用多线程读取。\nio-threads\nI/O 线程数。\nlogfile\n导出日志信息到 stdout 或日志文件。\n","href":"/v2.0/05-radondb-redis-cluster/07-manage-parameters/","isSection":null,"linkkey":null,"title":"修改数据库配置参数"},{"content":" 本节介绍如何修改 RadonDB Redis Sentinel 数据库的配置参数。\nRadonDB Redis Sentinel 实例支持编辑配置参数，通过管理配置参数可调优数据库性能，并可启用数据库高可用性能。\n警告 修改部分配置参数后，Redis Sentinel 服务会重启，造成业务中断。请谨慎操作。\n前提条件 RadonDB Redis Sentinel 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Sentinel。\n在 Redis Sentinel 实例列表中，点击一个实例名称打开其详情页面。\n点击页面右侧的参数管理页签，点击编辑即可修改配置参数。\n点击确定保存。\n参数简介 参数 说明 外部访问\n是否使用域名从 KubeSphere 集群外部访问数据库分片。\nmaxmemory\nRedis 可用内存的上限，单位为 MB。默认值为 974。\nactiverehashing\n是否启用重哈希以节省内存。默认值为 yes。\nappendonly\n是否启用 AOF 持久性。默认值为 yes。\nappendfsync\nAOF 同步策略。默认值为 everysec。\ncluster-node-timeout\nRedis 集群节点不可用时间上限，单位为毫秒。超过上限后，Redis 集群节点将被视为故障。取值范围为 1000~6000000。默认值为 15000。\nlatency-monitor-threshold\n慢操作时间阈值，单位为毫秒。花费时间超过此参数值的操作将被写入日志。取值 0 表示禁用此功能。\nmaxclients\n客户端连接的最大数量。取值 0（默认值）表示不限制客户端连接数。默认值为 102400。\nmaxmemory-policy\nRedis 内存使用量达到上限时采取的策略。\nmaxmemory-samples\nRedis 内存使用量达到上限时，Redis 驱逐算法采用的样本数量。默认值为 3。\nmin-slaves-max-lag\n至少存在 min-slaves-to-write 个从数据库，并且这些从数据库的网络延迟不超过此参数值时，主数据库才能允许写操作。默认值为 10。\nmin-slaves-to-write\n请参考 min-slaves-max-lag 的描述信息。\nno-appendfsync-on-rewrite\nBGSAVE 或 BGREWRITEAOF 操作正在进行时是否阻止 fsync() 调用。\nnotify-keyspace-events\nRedis 发送的通知类型。\nrepl-backlog-size\n复制 backlog 文件的大小。\nrepl-backlog-ttl\n复制 backlog 文件的保留期限。取值范围为 1~864000，默认值为 3600。\nrepl-timeout\n复制超时时间。取值范围为 1~864000，默认值为 60。\nset-max-intset-entries\n当 set 对象完全由十进制 64 位带符号整数组成，并且 set 中元素数量不超过此参数的值时，使用 Intset 编码。\nslowlog-log-slower-than\n最大操作执行时间，单位为微秒。超过此参数值的操作将被记录到 slowlog 中。取值范围为 -1~60000000，默认值为 -1。\nslowlog-max-len\nslowlog 的最大长度。\nhash-max-ziplist-entries\n当 hash 对象同时满足以下两个条件时，采用 Ziplist 编码：1. hash 对象每个键和每个值的长度（单位为字节）不超过 hash-max-ziplist-value 值；2. hash 对象中的键值对数量不超过 hash-max-ziplist-entries 值。\nhash-max-ziplist-value\n请参考 hash-max-ziplist-entries 的描述信息。\nlist-max-ziplist-entries\n当 list 对象同时满足以下两个条件时，采用 Ziplist 编码：1. list 对象元素的长度（单位为字节）不超过 list-max-ziplist-value 值；2. list 对象中的元素数量不超过 list-max-ziplist-entries 值。\nlist-max-ziplist-value\n请参考 list-max-ziplist-entries 的描述信息。\nzset-max-ziplist-entries\n当 zset 对象同时满足以下两个条件时，采用 Ziplist 编码：1. zset 对象元素的长度（单位为字节）不超过 zset-max-ziplist-value 值；2. zset 对象中的元素数量不超过 zset-max-ziplist-entries 值。\nzset-max-ziplist-value\n请参考 zset-max-ziplist-entries 的描述信息。\nlua-time-limit\nLua 脚本超时时间，单位为毫秒。取值 0 或负值表示不设置超时时间。\nio-threads-do-reads\n是否启用多线程读取。\nio-threads\nI/O 线程数。\nlogfile\n导出日志信息到 stdout 或日志文件。\n","href":"/v2.0/06-radondb-redis-sentinel/07-manage-parameters/","isSection":null,"linkkey":null,"title":"修改数据库配置参数"},{"content":" 本节介绍如何修改 RadonDB PostgreSQL 数据库的配置参数。\nRadonDB PostgreSQL 实例支持编辑配置参数，通过管理配置参数可调优数据库性能，并可启用数据库高可用性能。\n警告 修改部分配置参数后，PostgreSQL 服务会重启，造成业务中断。请谨慎操作。\n前提条件 RadonDB PostgreSQL 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n点击页面右侧的参数管理页签，点击编辑即可修改配置参数。\n点击确定保存。\n参数简介 参数 说明 内核\n数据库内核版本。创建成功后，不支持修改。\nport\nPostgreSQL 服务器监听的端口号。取值范围为 1~65534，参数值不能为 55555。\nfsync\n是否设置 PostgreSQL 服务器尽可能确保更新被物理写入磁盘。默认值为 true。\nfull_page_writes\n是否设置 PostgreSQL 服务器在每个检查点后第一次修改时将每个磁盘页面的全部内容写入 WAL。\nwal_compression\n表示流式复制并发连接的最大数量是否设置 PostgreSQL 服务器在基础备份过程中或在 full_page_writes 启用时压缩写入到 WAL 的完整页面。\njit\nJIT 编译可用时，是否允许 PostgreSQL 使用 JIT 编译。\nautovacuum\n服务器是否运行自动清理启动器守护进程。\nsynchronous_commit\n数据库服务器向客户端返回 success 指示之前所需要完成的 WAL 处理工作量。\nwal_level\n写入 WAL 的信息级别。\ntemp_buffers\n每个数据库会话用作临时缓冲区的最大内存大小，单位为 MB。取值范围为 1~32768，默认值为 1。\nwork_mem\n将数据写入临时磁盘文件之前查询操作所使用的内存上限，单位为 MB。取值范围为 1~1024。\nmaintenance_work_mem\n用于 VACUM、CREATE INDEX、ALTER TABLE ADD FOREIGN KEY 等维护操作的最大内存空间，单位为 MB。取值范围为 64~1024。\nshared_buffers\n数据库服务器用作共享缓冲区的内存，单位为 MB。取值范围为 128~10240。\nmax_connections\n并发连接的最大数量。取值范围为 100~262143。\nmax_worker_processes\n并发工作进程的最大数量。取值范围为 10~65536。\nwal_writer_delay\nWAL 写入器的活动轮次之间的睡眠时间，单位为毫秒。取值范围为 1~10000。\nwal_writer_flush_after\nWAL 写入器写入 WAL 日志的数量阈值，单位为 MB。达到此参数值时将触发刷写。取值范围为 1~1024。\ncommit_delay\n在提交事务和将 WAL 刷写到到磁盘之间的延迟，单位为微秒。取值范围为 0~100000，默认值为 0。\ncommit_siblings\n执行 commit_delay 所需并发活动事务的最小数量。取值范围为 0~1000，默认值为 5。\nbgwriter_delay\n后台写入器的活动轮次之间的睡眠时间，单位为毫秒。取值范围为 10~10000，默认值为 10。\nbgwriter_lru_maxpages\n后台写入器每个轮次刷写的 LRU 页面的最大数量。取值范围为 0~1073741823，默认值为 1000。\nbgwriter_flush_after\n当后台写入器写入的数据量大于此参数值时（单位为 KB），尝试强制要求操作系统将写入的数据刷写到底层存储系统中。取值范围为 0~2048，默认值为 512。\nstatement_timeout\n语句的最大持续时间，单位为微秒。花费时间超过此参数值的语句将被中止。取值范围为 0~2147483647，默认值为 0。\nidle_in_transaction_session_timeout\n在事务查询之间最大空闲时间，单位为微秒。空闲时间超过此参数值的会话将被终止。取值范围为 0~2147483647，默认值为 86400000。\nlog_min_duration_statement\n触发日志记录的语句最短执行时间，单位为毫秒。取值范围为 -1~2147483647，默认值为 10000。\ncheckpoint_timeout\nWAL 自动检查点之间的最大时间间隔，单位秒。取值范围为 30~86400，默认值为 300。\nautovacuum_vacuum_cost_delay\nautovacuum 操作的代价延迟值，单位为毫秒。取值范围为 -1~100，默认值为 0。\nautovacuum_vacuum_cost_limit\nautovacuum 操作的代价限制值。取值范围为 -1~10000，默认值为 10000。\nautovacuum_vacuum_scale_factor\n触发 autovacuum VACUUM 操作的表大小比例阈值。取值范围为 0.01~100，默认值为 0.02。\nautovacuum_analyze_scale_factor\n触发 autovacuum ANALYZE 操作的表大小比例阈值。取值范围为 0.01~100，默认值为 0.05。\nvacuum_defer_cleanup_age\nVACUUM 和 HOT cleanup 操作的延迟（以事务数量计）。取值范围为 0~1000000，默认值为 10000。\nseq_page_cost\n规划器对于一次顺序获取磁盘页面的代付估计。取值范围为 0~100000000，默认值为 1。\nrandom_page_cost\n规划器对于一次非顺序获取磁盘页面的代付估计。取值范围为 0~100000000，默认值为 1.1。\ncpu_tuple_cost\n规划器对一次查询中处理每一行的代价估计。取值范围为 0~100000000，默认值为 0.01。\ncpu_index_tuple_cost\n规划器对一次索引扫描中处理每一个索引项的代价估计。取值范围为 0~100000000，默认值为 0.005。\nlog_min_messages\n写入到服务器日志的消息等级。\nlog_statement\n需要记录的 SQL 语句的类型。\nmax_wal_senders\n同时运行的 WAL 发送器进程的最大数量。取值范围为 10~262143，默认值为 15。\nmax_replication_slots\n复制槽（replication slot）的最大数量。修改此参数值将导致数据库服务重启。取值范围为 10~262143，默认值为 15。\n","href":"/v2.0/08-radondb-postgresql/07-manage-parameters/","isSection":null,"linkkey":null,"title":"修改数据库配置参数"},{"content":" 本节介绍如何管理 RadonDB PostgreSQL 数据库。\nRadonDB PostgreSQL 是一款基于 PostgreSQL 的容器化、高可用的关系型数据库。提供实时监控、健康检查、日志自动清理等功能，被广泛应用于地理空间和移动领域。\n在 KubeSphere 企业版 Web 控制台安装“数据库管理平台”扩展组件后，进入数据库管理平台，即可以容器化的方式部署 PostgreSQL 数据库，并通过图形界面对 PostgreSQL 数据库进行管理。\n","href":"/v2.0/08-radondb-postgresql/","isSection":null,"linkkey":null,"title":"PostgreSQL"},{"content":" 本节介绍如何扩展 RadonDB RabbitMQ 的节点。\n警告 若选择节点数低于当前节点数，将删除超出的节点。\n扩展节点可能会中断 RabbitMQ 服务，请在非高峰时段执行此操作。\n前提条件 RadonDB RabbitMQ 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 RabbitMQ。\n在 RabbitMQ 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展。\n在扩展对话框，设置节点的数量，然后点击确定。待实例状态切换为运行中，则新增节点完成。\n","href":"/v2.0/11-radondb-rabbitmq/08-scale-out-the-database-cluster/","isSection":null,"linkkey":null,"title":"扩展 RabbitMQ 节点"},{"content":" 本节介绍如何扩展挂载到数据库节点的卷。\n备注 目前不支持对使用 KubeSphere 企业版集群本地存储创建的卷（local）进行扩展。\n目前仅支持增加卷容量，不支持减少卷容量。\n此操作可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB OpenSearch 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 OpenSearch。\n在 OpenSearch 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展卷。\n在扩展卷对话框，选择节点角色，设置卷的容量，然后点击确定。\n","href":"/v2.0/04-radondb-opensearch/08-expand-the-volume/","isSection":null,"linkkey":null,"title":"扩展卷"},{"content":" 本节介绍如何扩展挂载到数据库节点的卷。\n备注 目前不支持对使用 KubeSphere 企业版集群本地存储（存储类为 local）创建的卷进行扩展。\n目前仅支持增加卷容量，不支持减少卷容量。\n扩容卷可能会造成业务短暂的中断，请在业务低峰时进行。\n前提条件 RadonDB MongoDB 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MongoDB。\n在 MongoDB 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展卷。\n在扩展卷对话框，修改卷容量，然后点击确定。\n","href":"/v2.0/07-radondb-mongodb/08-expand-the-volume/","isSection":null,"linkkey":null,"title":"扩展卷"},{"content":" 本节介绍如何扩展 RadonDB MySQL 数据库的节点。\n警告 若选择节点数低于当前节点数，将删除超出的节点。\n扩展节点可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB MySQL 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展。\n在扩展对话框，设置节点的数量，然后点击确定。待实例状态切换为运行中，则新增节点完成。\n","href":"/v2.0/02-radondb-mysql/08-scale-out-the-database-cluster/","isSection":null,"linkkey":null,"title":"扩展数据库节点"},{"content":" 本节介绍如何扩展 RadonDB Redis Cluster 数据库的节点。\n警告 若选择节点数低于当前节点数，将删除超出的节点。\n扩展节点可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB Redis Cluster 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Cluster。\n在 Redis Cluster 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展。\n在扩展对话框，选择节点角色，设置节点的数量，然后点击确定。待实例状态切换为运行中，则新增节点完成。\n","href":"/v2.0/05-radondb-redis-cluster/08-scale-out-the-database-cluster/","isSection":null,"linkkey":null,"title":"扩展数据库节点"},{"content":" 本节介绍如何扩展 RadonDB Redis Sentinel 数据库的节点。\n警告 若选择节点数低于当前节点数，将删除超出的节点。\n扩展节点可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB Redis Sentinel 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Sentinel。\n在 Redis Sentinel 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展。\n在扩展对话框，选择节点的数量，然后点击确定。待实例状态切换为运行中，则新增节点完成。\n","href":"/v2.0/06-radondb-redis-sentinel/08-scale-out-the-database-cluster/","isSection":null,"linkkey":null,"title":"扩展数据库节点"},{"content":" 本节介绍如何扩展 RadonDB PostgreSQL 数据库的节点。\n警告 若选择节点数低于当前节点数，将删除超出的节点。\n扩展节点可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB PostgreSQL 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展。\n在扩展对话框，设置节点的数量，然后点击确定。待实例状态切换为运行中，则新增节点完成。\n","href":"/v2.0/08-radondb-postgresql/08-scale-out-the-database-cluster/","isSection":null,"linkkey":null,"title":"扩展数据库节点"},{"content":" 本节介绍如何修改 RadonDB Kafka 的配置参数。\nRadonDB Kafka 实例支持编辑配置参数，通过管理配置参数可调优服务性能，并可启用高可用性能。\n警告 修改部分配置参数后，Kafka 服务会重启，造成业务中断。请谨慎操作。\n前提条件 RadonDB Kafka 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n点击页面右侧的参数管理页签，在左上角的下拉框中切换 Kafka 和 ZooKeeper，点击编辑即可修改配置参数。\n点击确定保存。\n参数简介 Kafka 参数 参数 说明 num.partitions\n主题分区默认值。默认值为 3。\nTLS\n是否启用 TLS 加密。默认值为 true。\n认证类型\nKafka 的认证类型。默认采用 TLS。\n节点端口\n是否启用 KubeSphere 节点端口用于从集群外部访问。默认值为 true。\nlog.retention.bytes\n分区大小上限，单位为字节。分区大小超过上限将触发删除策略。默认值为 -1。\nlog.retention.hours\n日志文件的最大保留时间。超过最大保留时间的日志文件将被删除。默认值为 168。\nlog.segment.bytes\n段文件的大小上限，单位为字节。默认值为 1073741824。\nlog.segment.delete.delay.ms\n删除段文件之前等待的时间。默认值为 60000。\nlog.roll.hours\n段文件轮滚前的最大时间，单位为小时。默认值为 168。\noffsets.topic.replication.factor\n偏移主题的复制因子（设置较大的值可确保可用性）。在集群大小符合此参数要求前，内部主题创建将失败。默认值为 3。\nlog.cleanup.policy\n超过保留窗口后，段的默认清理策略。参数值可以为 delete 和 compact。您可以同时设置两个值并用半角逗号（,）分隔。默认值为 delete。\nlog.cleaner.enable\n是否在服务器上启用日志清理器进程。默认值为 true。\ncompression.type\nDBPARAM_COMPRESSION_TYPE_DESC。默认值为 producer。\nmessage.max.bytes\n记录批次的大小上限，单位为字节。取值范围为 1024~2147483647，默认值为 1000000。\nnum.network.threads\n服务器用于接收网络请求和向网络发送响应的线程数。默认值为 3。\nnum.io.threads\n服务器用于处理请求的线程数量，可能包括磁盘 I/O。取值范围为 1~20，默认值为 8。\nnum.recovery.threads.per.data.dir\n每个数据目录用于启动时日志恢复和关闭时刷写的线程数。默认值为 1。\nnum.replica.fetchers\n用于从源 Broker 复制消息的 Fetcher 线程数。取值范围为 1~10，默认值为 1。\nqueued.max.requests\n阻止网络线程之前允许排队的请求数量。取值范围为 1~5000，默认值为 500。\nreplica.lag.time.max.ms\n如果跟随者没有发送任何 Fetch 请求或没有消费领导者日志结束偏移达到此参数指定的时间，领导者将把跟随者从 ISR 中移除。取值范围为 6000~99999，默认值为 10000。\ngroup.max.session.timeout.ms\n注册消费者的最大会话超时。取值范围为 0~9999999，默认值为 1800000。\ngroup.min.session.timeout.ms\n注册消费者的最小会话超时。取值范围为 0~60000，默认值为 6000。\nauto.create.topics.enable\n是否启用自动主题创建。默认值为 false。\nmin.insync.replicas\nISR 集的最小副本数量。取值范围为 1~6，默认值为 2。\ndefault.replication.factor\n默认复制因子。取值范围为 1~6，默认值为 3。\nZooKeeper 参数 参数 说明 tickTime\nZooKeeper 使用的基本单位时间，单位为毫秒。此参数值用于心跳信号，并且最小会话超时将是 tickTime 的两倍。取值范围为 1~1000000，默认值为 2000。\ninitLimit\n允许追随者连接并领导者并与领导者同步数据的最大 tick 数。取值范围为 1~1000000，默认值为 5。\nsyncLimit\n允许跟随者同步数据的最 tick 数。如果同步进程超过限制，跟随者将被丢弃。取值范围为 1~1000000，默认值为 2。\nmaxClientCnxns\n单个客户端（由 IP 地址标识）可以在套接字级别对 ZooKeeper 的单个成员建立的最大并发连接数量。此参数用于防止某些类别的 DoS 攻击，例如文件描述符耗尽。取值范围为 1~1000000，默认值为 1000。\nautopurge.snapRetainCount\n启用 ZooKeeper 自动清除功能时保留的最新快照和相应事务日志的数量。取值范围为 3~100000000，默认值为 3。\nautopurge.purgeInterval\n自动清除操作的时间间隔，单位为小时。参数值 0 表示自动清除功能已禁用。取值范围为 0~720，默认值为 1。\n","href":"/v2.0/10-radondb-kafka/08-manage-parameters/","isSection":null,"linkkey":null,"title":"修改配置参数"},{"content":" 本节介绍如何调整 RadonDB MySQL 数据库的 CPU 和内存资源。\n警告 此操作可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB MySQL 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 调整资源。\n在调整资源对话框，选择分配给每个节点的 CPU 和内存资源数量，然后点击确定。\n","href":"/v2.0/02-radondb-mysql/09-adjust-cpu-and-memory-resources-copy/","isSection":null,"linkkey":null,"title":"调整 CPU 和内存资源"},{"content":" 本节介绍如何调整 RadonDB Redis Cluster 数据库的 CPU 和内存资源。\n警告 此操作可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB Redis Cluster 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Cluster。\n在 Redis Cluster 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 调整资源。\n在调整资源对话框，选择节点角色，设置分配给每个节点的 CPU 和内存资源数量，然后点击确定。\n","href":"/v2.0/05-radondb-redis-cluster/09-adjust-cpu-and-memory-resources/","isSection":null,"linkkey":null,"title":"调整 CPU 和内存资源"},{"content":" 本节介绍如何调整 RadonDB Redis Sentinel 数据库的 CPU 和内存资源。\n警告 此操作可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB Redis Sentinel 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Sentinel。\n在 Redis Sentinel 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 调整资源。\n在调整资源对话框，设置分配给每个节点的 CPU 和内存资源数量，然后点击确定。\n","href":"/v2.0/06-radondb-redis-sentinel/09-adjust-cpu-and-memory-resources/","isSection":null,"linkkey":null,"title":"调整 CPU 和内存资源"},{"content":" 本节介绍如何调整 RadonDB PostgreSQL 数据库的 CPU 和内存资源。\n警告 此操作可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB PostgreSQL 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 调整资源。\n在调整资源对话框，选择分配给每个节点的 CPU 和内存资源数量，然后点击确定。\n","href":"/v2.0/08-radondb-postgresql/09-adjust-cpu-and-memory-resources/","isSection":null,"linkkey":null,"title":"调整 CPU 和内存资源"},{"content":" 本节介绍如何调整 RadonDB RabbitMQ 节点的 CPU 和内存资源。\n警告 此操作可能会中断 RabbitMQ 服务，请在非高峰时段执行此操作。\n前提条件 RadonDB RabbitMQ 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 RabbitMQ。\n在 RabbitMQ 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 调整资源。\n在调整资源对话框，选择分配给每个节点的 CPU 和内存资源数量，然后点击确定。\n","href":"/v2.0/11-radondb-rabbitmq/09-adjust-cpu-and-memory-resources/","isSection":null,"linkkey":null,"title":"调整 CPU 和内存资源"},{"content":" 本节介绍如何扩展 RadonDB Kafka 的节点。\n警告 若选择节点数低于当前节点数，将删除超出的节点。\n此操作可能会中断 Kafka 服务，请在非高峰时段执行此操作。\n前提条件 RadonDB Kafka 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展。\n在扩展对话框，选择节点角色和数量，然后点击确定。待实例状态切换为运行中，则新增节点完成。\n","href":"/v2.0/10-radondb-kafka/09-scale-out-the-database-cluster/","isSection":null,"linkkey":null,"title":"扩展 Kafka 节点"},{"content":" 本节介绍如何删除 RadonDB MongoDB 实例。\n警告 此操作将删除 RadonDB MongoDB 数据库和数据库中的所有数据，请谨慎执行此操作。\n前提条件 已创建 RadonDB MongoDB 实例。\n为避免数据丢失，请提前备份数据。\n操作步骤 删除单个实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MongoDB。\n在 RadonDB MongoDB 实例右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入 RadonDB MongoDB 实例的名称，然后点击确定。\n批量删除实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MongoDB。\n选择需要删除的实例左侧的复选框，然后在列表上方点击删除。\n在确认删除对话框中，输入要删除的实例名称，点击确定。\n备注 请使用半角逗号（,）和空格分隔多个名称。\n","href":"/v2.0/07-radondb-mongodb/09-delete-radondb-mongodb/","isSection":null,"linkkey":null,"title":"删除 MongoDB 实例"},{"content":" 本节介绍如何删除 RadonDB OpenSearch 实例。\n警告 此操作将删除 RadonDB OpenSearch 数据库和数据库中的所有数据，请谨慎执行此操作。\n前提条件 已创建 RadonDB OpenSearch 实例。\n为避免数据丢失，请提前备份数据。\n操作步骤 删除单个实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 OpenSearch。\n在 RadonDB OpenSearch 实例右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入 RadonDB OpenSearch 实例的名称，然后点击确定。\n批量删除实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 OpenSearch。\n选择需要删除的实例左侧的复选框，然后在列表上方点击删除。\n在确认删除对话框中，输入要删除的实例名称，点击确定。\n备注 请使用半角逗号（,）和空格分隔多个名称。\n","href":"/v2.0/04-radondb-opensearch/09-delete-radondb-opensearch/","isSection":null,"linkkey":null,"title":"删除 OpenSearch 实例"},{"content":" 本节介绍如何管理 RadonDB Kafka 服务。\nRadonDB Kafka 是基于 Kafka 构建的分布式发布订阅消息系统，具有高吞吐量、低延迟、高可靠等优点，被广泛应用于网站活动追踪、日志监控、流式计算、事件采集、数据存储等应用场景。\n在 KubeSphere 企业版 Web 控制台安装“数据库管理平台”扩展组件后，进入数据库管理平台，即可以容器化的方式部署 Kafka，并通过图形界面对 Kafka 进行管理。\n","href":"/v2.0/10-radondb-kafka/","isSection":null,"linkkey":null,"title":"Kafka"},{"content":"","href":"/v2.0/","isSection":[{"children":[{"children":[{"title":"产品特性","url":"01-intro/01-overview/"},{"title":"进入数据库管理平台","url":"01-intro/02-access-dmp/"}],"title":"数据库管理平台"}],"icon":"icon-note_tree_duotone","title":"了解"},{"children":[{"children":[{"title":"MySQL","url":"02-radondb-mysql/"},{"title":"OpenSearch","url":"04-radondb-opensearch/"},{"title":"Redis Cluster","url":"05-radondb-redis-cluster/"},{"title":"Redis Sentinel","url":"06-radondb-redis-sentinel/"},{"title":"MongoDB","url":"07-radondb-mongodb/"},{"title":"PostgreSQL","url":"08-radondb-postgresql/"}],"title":"数据库服务"},{"children":[{"title":"Kafka","url":"10-radondb-kafka/"},{"title":"RabbitMQ","url":"11-radondb-rabbitmq/"}],"title":"中间件服务"}],"icon":"icon-apps_2_duotone","title":"使用"},{"children":[{"children":[{"title":"创建备份仓库","url":"12-backup-management/01-create-a-backup-repository"},{"title":"管理数据库备份","url":"12-backup-management/02-backup-data-management"}],"title":"备份管理"}],"icon":"icon-hammer_duotone","title":"运维"}],"linkkey":null,"title":"RadonDB DMP 数据库管理平台"},{"content":" 本节介绍如何扩展挂载到数据库节点的卷。\n备注 目前不支持对使用 KubeSphere 企业版集群本地存储创建的卷（local）进行扩展。\n目前仅支持增加卷容量，不支持减少卷容量。\n此操作可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB MySQL 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 MySQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展卷。\n在扩展卷对话框，设置卷的容量，然后点击确定。\n","href":"/v2.0/02-radondb-mysql/10-expand-the-volume/","isSection":null,"linkkey":null,"title":"扩展卷"},{"content":" 本节介绍如何扩展挂载到数据库节点的卷。\n备注 目前不支持对使用 KubeSphere 企业版集群本地存储创建的卷（local）进行扩展。\n目前仅支持增加卷容量，不支持减少卷容量。\n此操作可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB Redis Cluster 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Cluster。\n在 Redis Cluster 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展卷。\n在扩展卷对话框，选择节点角色，设置卷的容量，然后点击确定。\n","href":"/v2.0/05-radondb-redis-cluster/10-expand-the-volume/","isSection":null,"linkkey":null,"title":"扩展卷"},{"content":" 本节介绍如何扩展挂载到数据库节点的卷。\n备注 目前不支持对使用 KubeSphere 企业版集群本地存储创建的卷（local）进行扩展。\n目前仅支持增加卷容量，不支持减少卷容量。\n此操作可能会中断数据库服务，请在非高峰时段执行此操作。\n前提条件 RadonDB Redis Sentinel 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Sentinel。\n在 Redis Sentinel 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展卷。\n在扩展卷对话框，选择节点角色，设置卷的容量，然后点击确定。\n","href":"/v2.0/06-radondb-redis-sentinel/10-expand-the-volume/","isSection":null,"linkkey":null,"title":"扩展卷"},{"content":" 本节介绍如何扩展挂载到数据库节点的卷。\n备注 目前不支持对使用 KubeSphere 企业版集群本地存储（存储类为 local）创建的卷进行扩展。\n目前仅支持增加卷容量，不支持减少卷容量。\n扩容卷可能会造成业务短暂的中断，请在业务低峰时进行。\n前提条件 RadonDB PostgreSQL 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 PostgreSQL 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展卷。\n在扩展卷对话框，修改卷容量，然后点击确定。\n","href":"/v2.0/08-radondb-postgresql/10-expand-the-volume/","isSection":null,"linkkey":null,"title":"扩展卷"},{"content":" 本节介绍如何扩展挂载到 RadonDB RabbitMQ 节点的卷。\n备注 目前不支持对使用 KubeSphere 企业版集群本地存储（存储类为 local）创建的卷进行扩展。\n目前仅支持增加卷容量，不支持减少卷容量。\n扩容卷可能会造成业务短暂的中断，请在业务低峰时进行。\n前提条件 RadonDB RabbitMQ 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 RabbitMQ。\n在 RabbitMQ 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展卷。\n在扩展卷对话框，修改卷容量，然后点击确定。\n","href":"/v2.0/11-radondb-rabbitmq/10-expand-the-volume/","isSection":null,"linkkey":null,"title":"扩展卷"},{"content":" 本节介绍如何重平衡 RadonDB Kafka 节点。\n重平衡（rebalance）规定了一个消费组的消费者如何分配订阅主题的分区，同一个消费组不能有多个消费者同时消费同一个分区。\n警告 此操作可能会中断 Kafka 服务，请在非高峰时段执行此操作。\n前提条件 RadonDB Kafka 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 重平衡节点。\n在重平衡节点对话框，点击开始重平衡。\n","href":"/v2.0/10-radondb-kafka/10-rebalance-nodes/","isSection":null,"linkkey":null,"title":"重平衡 Kafka 节点"},{"content":" 本节介绍如何管理 RadonDB RabbitMQ 服务。\nRadonDB RabbitMQ 是一款分布式消息队列系统，遵循 AMQP （高级消息队列协议）标准。它是在分布式系统中存储和转发消息的中间件，可用来降低系统间的耦合度，提高消息的发送和接收效率，确保消息的可靠性传输。 RabbitMQ 支持多种消息协议，提供了多种编程语言的客户端，并且可以灵活地与各种应用和系统集成。它被广泛应用于复杂的系统架构中，用于异步处理、流量削峰、分布式事务处理等场景。\n在 KubeSphere 企业版 Web 控制台安装“数据库管理平台”扩展组件后，进入数据库管理平台，即可以容器化的方式部署 RabbitMQ，并通过图形界面对 RabbitMQ 进行管理。\n","href":"/v2.0/11-radondb-rabbitmq/","isSection":null,"linkkey":null,"title":"RabbitMQ"},{"content":" 本节介绍如何调整 RadonDB Kafka 节点的 CPU 和内存资源。\n警告 此操作可能会中断 Kafka 服务，请在非高峰时段执行此操作。\n前提条件 RadonDB Kafka 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 调整资源。\n在调整资源对话框，选择节点角色，设置分配给每个节点的 CPU 和内存资源数量，然后点击确定。\n","href":"/v2.0/10-radondb-kafka/11-adjust-cpu-and-memory-resources/","isSection":null,"linkkey":null,"title":"调整 CPU 和内存资源"},{"content":" OpenSearch 集群自生成的证书不支持在 Web 页面上下载，可通过 secret 手动获取证书。本章介绍如何配置 OpenSearch 集群服务端和客户端证书。\n","href":"/v2.0/04-radondb-opensearch/11-configure-certificates/","isSection":null,"linkkey":null,"title":"配置 OpenSearch 集群证书"},{"content":" 本节介绍如何删除 RadonDB MySQL 实例。\n警告 此操作将删除 RadonDB MySQL 数据库和数据库中的所有数据，请谨慎执行此操作。\n前提条件 已创建 RadonDB MySQL 实例。\n为避免数据丢失，请提前备份数据。\n操作步骤 删除单个实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n在 RadonDB MySQL 实例右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入 RadonDB MySQL 实例的名称，然后点击确定。\n勾选同时删除备份信息，将同时清除数据库备份。\n批量删除实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 MySQL。\n选择需要删除的实例左侧的复选框，然后在列表上方点击删除。\n在确认删除对话框中，输入要删除的实例名称，点击确定。\n备注 请使用半角逗号（,）和空格分隔多个名称。\n","href":"/v2.0/02-radondb-mysql/11-delete-radondb-mysql/","isSection":null,"linkkey":null,"title":"删除 MySQL 实例"},{"content":" 本节介绍如何删除 RadonDB PostgreSQL 实例。\n警告 此操作将删除 RadonDB PostgreSQL 数据库和数据库中的所有数据，请谨慎执行此操作。\n前提条件 已创建 RadonDB PostgreSQL 实例。\n为避免数据丢失，请提前备份数据。\n操作步骤 删除单个实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n在 RadonDB PostgreSQL 实例右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入 RadonDB PostgreSQL 实例的名称，然后点击确定。\n勾选同时删除备份信息，将同时清除数据库备份。\n批量删除实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 PostgreSQL。\n选择需要删除的实例左侧的复选框，然后在列表上方点击删除。\n在确认删除对话框中，输入要删除的实例名称，点击确定。\n备注 请使用半角逗号（,）和空格分隔多个名称。\n","href":"/v2.0/08-radondb-postgresql/11-delete-radondb-postgresql/","isSection":null,"linkkey":null,"title":"删除 PostgreSQL 实例"},{"content":" 本节介绍如何删除 RadonDB RabbitMQ 实例。\n警告 此操作将删除 RadonDB RabbitMQ 实例中的所有数据，请谨慎执行此操作。\n前提条件 已创建 RadonDB RabbitMQ 实例。\n为避免数据丢失，请提前备份数据。\n操作步骤 删除单个实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 RabbitMQ。\n在 RadonDB RabbitMQ 实例右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入 RadonDB RabbitMQ 实例的名称，然后点击确定。\n批量删除实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 RabbitMQ。\n选择需要删除的实例左侧的复选框，然后在列表上方点击删除。\n在确认删除对话框中，输入要删除的实例名称，点击确定。\n备注 请使用半角逗号（,）和空格分隔多个名称。\n","href":"/v2.0/11-radondb-rabbitmq/11-delete-radondb-rabbitmq/","isSection":null,"linkkey":null,"title":"删除 RabbitMQ 实例"},{"content":" 本节介绍如何删除 RadonDB Redis Cluster 实例。\n警告 此操作将删除 RadonDB Redis Cluster 数据库和数据库中的所有数据，请谨慎执行此操作。\n前提条件 已创建 RadonDB Redis Cluster 实例。\n为避免数据丢失，请提前备份数据。\n操作步骤 删除单个实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Cluster。\n在 RadonDB Redis Cluster 实例右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入 RadonDB Redis Cluster 实例的名称，然后点击确定。\n批量删除实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Cluster。\n选择需要删除的实例左侧的复选框，然后在列表上方点击删除。\n在确认删除对话框中，输入要删除的实例名称，点击确定。\n备注 请使用半角逗号（,）和空格分隔多个名称。\n","href":"/v2.0/05-radondb-redis-cluster/11-delete-radondb-redis-cluster/","isSection":null,"linkkey":null,"title":"删除 Redis Cluster 实例"},{"content":" 本节介绍如何删除 RadonDB Redis Sentinel 实例。\n警告 此操作将删除 RadonDB Redis Sentinel 数据库和数据库中的所有数据，请谨慎执行此操作。\n前提条件 已创建 RadonDB Redis Sentinel 实例。\n为避免数据丢失，请提前备份数据。\n操作步骤 删除单个实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Sentinel。\n在 RadonDB Redis Sentinel 实例右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入 RadonDB Redis Sentinel 实例的名称，然后点击确定。\n批量删除实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Redis Sentinel。\n选择需要删除的实例左侧的复选框，然后在列表上方点击删除。\n在确认删除对话框中，输入要删除的实例名称，点击确定。\n备注 请使用半角逗号（,）和空格分隔多个名称。\n","href":"/v2.0/06-radondb-redis-sentinel/11-delete-radondb-redis-sentinel/","isSection":null,"linkkey":null,"title":"删除 Redis Sentinel 实例"},{"content":" 本节介绍如何创建备份仓库，以及管理数据库备份。\n","href":"/v2.0/12-backup-management/","isSection":null,"linkkey":null,"title":"备份管理"},{"content":" Logstash 是一个开源数据收集引擎，支持从多个数据源采集数据、转换数据、并将数据写入到指定存储中。本节介绍如何对接 Logstash 和 Kafka。\n前提条件 已获取 KubeSphere 企业版平台登录账号和密码，且已获取平台管理权限。\n已经创建好 Kafka 和 OpenSearch 集群，且集群状态处于运行中。\nKafka 集群操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 集群列表中，点击一个集群名称打开其详情页面。\n在页面右侧点击主题。\n在创建主题对话框，输入主题名称，并设置分区数量和副本数量，点击确定。\n点击 Kafka 用户，然后点击创建。\n在创建用户对话框，设置用户名为 logstash，然后点击确定。用户创建完成后将显示在用户列表中。\n在页面左侧的传输加密区域，下载 CA 证书并保存密码。\n在页面右侧点击 Kafka 用户页签，下载用户证书并保存密码。\n上传证书到服务器，根据 keystore 和 truststore 创建 secret 或 configmap。\n# 创建 secret kubectl -n p1 create secret generic test-kafka-ssl --from-file ./cluster.keystore.p12 --from-file ./cluster.truststore.p12 # 创建 configmap kubectl -n p1 create cm test-cm-kafka --from-file=/tmp/cluster.keystore.p12 --from-file=/tmp/cluster.truststore.p12 OpenSearch 集群操作步骤 配置 Logstash CR 文件 logstash-kafka-ssl.yml。\napiVersion: opensearch.opster.io/v1 kind: Logstash metadata: name: radondb-os spec: replicas: 1 config: jvm: \u0026#34;-Xms512m -Xmx512m\u0026#34; openSearchInfo: openSearchCluster: name: radondb-os # opensearch 集群名称 namespace: p1 # opensearch 所在的 ns ports: [8080] # bootstrap_servers : kafka ：读写地址 # security_protocol : 认证类型 ：固定值 SSL # ssl_keystore_location : 用户证书的全路径 ：固定值 /usr/share/ssl/cluster.keystore.p12 # ssl_keystore_password : 用户密码 ：上述 logstash 用户证书密码 # ssl_keystore_type : 用户证书格式 ：PKCS12 （kse中的 kafka 用此格式，根据实际情况调整） # ssl_truststore_location ：ca 证书的全路径 ：固定值 /usr/share/ssl/cluster.truststore.p12 # ssl_truststore_password : ca 证书的密码 ：上述 ca 证书密码 # ssl_truststore_type : ca 证书的格式 ：PKCS12 （kse中的 kafka 用此格式，根据实际情况调整） # ssl_endpoint_identification_algorithm ：固定值 \u0026#34;\u0026#34; pipelineConfig: inputs: |- kafka { topics =\u0026gt; [\u0026#34;test-topic\u0026#34;,\u0026#34;test-topic-1\u0026#34;] bootstrap_servers =\u0026gt; \u0026#34;radondb-85z8fi-kafka-external-bootstrap.p1:9092\u0026#34; security_protocol =\u0026gt; \u0026#34;SSL\u0026#34; ssl_keystore_location =\u0026gt; \u0026#34;/usr/share/ssl/cluster.keystore.p12\u0026#34; ssl_keystore_password =\u0026gt; \u0026#34;HZznFT_xv1BXDA6NkqBC7PbT9_vzI1t2\u0026#34; ssl_keystore_type =\u0026gt; \u0026#34;PKCS12\u0026#34; ssl_truststore_location =\u0026gt; \u0026#34;/usr/share/ssl/cluster.truststore.p12\u0026#34; ssl_truststore_password =\u0026gt; \u0026#34;HZznFT_xv1BXDA6NkqBC7PbT9_vzI1t2\u0026#34; ssl_truststore_type =\u0026gt; \u0026#34;PKCS12\u0026#34; ssl_endpoint_identification_algorithm =\u0026gt; \u0026#34;\u0026#34; } filters: |- mutate { add_field =\u0026gt; { \u0026#34;LogstashHost\u0026#34; =\u0026gt; \u0026#34;${HOSTNAME}\u0026#34; } } outputs: openSearchIndex: |- # 保存到 opensearch 的索引设置 index =\u0026gt; \u0026#34;logstash-%{+YYYY.MM.dd}\u0026#34; podTemplate: spec: containers: - name: logstash resources: requests: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; limits: memory: \u0026#34;1Gi\u0026#34; cpu: \u0026#34;500m\u0026#34; volumeMounts: - name: certification-volume mountPath: /usr/share/ssl volumes: - name: certification-volume # test-secret-kafka Secret 需要提前创建，命令如下 # kubectl -n p1 create secret generic test-kafka-ssl --from-file ./cluster.keystore.p12 --from-file ./cluster.truststore.p12 secret: secretName: test-secret-kafka # 或者使用 configmap 挂载，也需要提前创建，命令如下 # kubectl -n p1 create cm test-cm-kafka --from-file=/tmp/cluster.keystore.p12 --from-file=/tmp/cluster.truststore.p12 # configMap: # name: test-cm-kafka 执行以下命令创建 Logstash。\nkubectl -n p1 apply -f ./logstash-kafka-ssl.yml 验证 Input 是否生效 在客户端节点执行以下命令，向主题发送消息。\n./kafka-console-producer.sh --broker-list {连接地址} --topic {Topic 名称} 连接地址：所连接的 Kafka 集群的地址，格式为 host_ip1:port,host_ip2:port,host_ip3:port。host_ip 为 Kafka 节点的 IP 地址，port 为客户端节点的访问端口 9092。\nTopic 名称：创建的主题名称。\n输入需要发送的消息内容，按 Enter 发送消息，每一行的内容都将作为一条消息发送到 Kafka。\n示例如下：\n./kafka-console-producer.sh --broker-list 172.22.2.124:9092,172.22.2.125:9092,192.22.2.126:9092 --topic test-topic \u0026gt;hello world \u0026gt;test msg1 在 OpenSearch Dashboards 查看数据写入情况，如果能够找到索引 logstash-yyyy.MM.dd，则证明消息写入成功。\nGET _cat/indices 执行以下命令查看写入到主题的信息是否完整。\nGET /logstash-2022.08.16/_search ","href":"/v2.0/04-radondb-opensearch/12-connect-logstash-to-kafka/","isSection":null,"linkkey":null,"title":"对接 Logstash 和 Kafka"},{"content":" 本节介绍如何扩展挂载到 RadonDB Kafka 节点的卷。\n备注 目前不支持对使用 KubeSphere 企业版集群本地存储（存储类为 local）创建的卷进行扩展。\n目前仅支持增加卷容量，不支持减少卷容量。\n扩容卷可能会造成业务短暂的中断，请在业务低峰时进行。\n前提条件 RadonDB Kafka 实例状态为运行中。\n操作步骤 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 Kafka 实例列表中，点击一个实例名称打开其详情页面。\n在页面左上角选择更多操作 \u0026gt; 扩展卷。\n在扩展卷对话框，修改卷容量，然后点击确定。\n","href":"/v2.0/10-radondb-kafka/12-expand-the-volume/","isSection":null,"linkkey":null,"title":"扩展卷"},{"content":" 本节介绍如何导出 PostgreSQL 源数据库集群内的数据，并导入至目标数据库集群。\n警告 数据迁移过程中，请暂停源数据库的写操作。\n为避免数据丢失，建议在业务低峰期迁移数据。\n小型 PostgreSQL 集群数据迁移 小型 PostgreSQL 集群可通过 pg_dump 离线导出数据，再通过 PostgreSQL 支持的方式导入数据，实现 PostgreSQL 的数据迁移。\n前提条件 已获取管理控制台登录账号和密码，且已获取集群操作权限。\nPostgreSQL 集群状态为活跃。\n已获取目标 PostgreSQL 数据库信息。\n步骤一：创建用户 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在 PostgreSQL 数据库集群的数据库用户页签，创建数据库用户。该用户的用户名、密码及账户权限必须与源数据库集群中的相同。\n备注 由于数据库具备完整的权限控制，在导出或导入数据时会根据用户权限进行区分。\n高级权限用户：能够导入导出整个数据库的数据。\n普通权限用户：仅能导入导出当前账户权限范围内的数据。\n在后续操作中，默认使用高级权限账户进行示例。如果使用普通权限账户，请注意关注相应的权限范围。\n步骤二：导出数据 若源集群与目标集群网络互通\n在源集群环境下，执行如下命令，将指定数据库内的数据直接导出至目标集群。\nPGPASSWORD=\u0026lt;用户密码\u0026gt; pg_dump -U \u0026lt;源端超级用户\u0026gt; -d \u0026lt;源端要备份的库\u0026gt; -C -h \u0026lt;源端库的 IP\u0026gt; | psql -U \u0026lt;目的端超级用户\u0026gt; -d postgres -h \u0026lt;目的端 IP\u0026gt; 示例：\nPGPASSWORD=Jxxxx1234@ pg_dump -U user_1 -d runoobdb -C -h 192.168.0.17 | psql -U user_1 -d postgres -h 192.168.0.18 若源集群与目标集群网络不互通\n在源集群环境下，执行如下命令，导出指定数据库的数据。\nPGPASSWORD=\u0026lt;用户密码\u0026gt; pg_dump -U \u0026lt;源端超级用户\u0026gt; -d \u0026lt;源端要备份的库\u0026gt; -C -h \u0026lt;源端库的IP\u0026gt; \u0026gt; dump.sql 示例：\nPGPASSWORD=Jxxxx1234@ pg_dump -U user_1 -d runoobdb -C -h 192.168.0.17 \u0026gt; dump.sql 在目标集群环境中，执行如下命令，将上述步骤中导出的 dump.sql 文件拷贝至目标集群。\npsql -U \u0026lt;目的端超级用户\u0026gt; -d postgres -h \u0026lt;目的端 IP\u0026gt; -f dump.sql 示例：\npsql -U user_1 -d postgres -h 192.168.1.17 -f dump.sql 命令行参数说明\npg_dump 使用 -C 参数后，目标集群会自动创建需要同步的数据库，因此目标集群数据库只固定填写 postgres 库即可。\n\u0026lt;用户密码\u0026gt;：源集群内已有的超级用户的密码。\n\u0026lt;源端超级用户\u0026gt;：源集群内超级用户的名称。\n\u0026lt;源端要备份的库\u0026gt;：源集群内需要备份的数据库名称。\n\u0026lt;源端库的 IP\u0026gt;：源集群内待备份数据库所在主节点的 IP 地址。\n\u0026lt;目的端超级用户\u0026gt;：目标集群内超级用户的名称。\n\u0026lt;目的端 IP\u0026gt;：目标集群内主节点的 IP 地址。\n步骤三：检查数据 数据迁移完成后，可以使用 select 语句或业务程序检查数据。\n大型 PostgreSQL 集群数据迁移 在大型 PostgreSQL 集群中，存在大量业务数据，通常不允许中断。因此，可以利用 PostgreSQL 的逻辑复制功能进行数据迁移。逻辑复制的配置通常与业务密切相关，请参阅互联网上 PostgreSQL 逻辑复制的相关教程，使用具有相应权限的用户进行操作。本文不再赘述，仅提供相应的解决思路。\n大对象的迁移 大对象在 PostgreSQL 数据库的处理相对特殊，因此，迁移含有大对象的数据表，只可以使用小型 PostgreSQL 集群的迁移方案。大型 PostgreSQL 集群的迁移方案不能迁移大对象的数据。\n","href":"/v2.0/08-radondb-postgresql/12-migrate-data/","isSection":null,"linkkey":null,"title":"迁移 PostgreSQL 数据"},{"content":" 本节介绍如何删除 RadonDB Kafka 实例。\n警告 此操作将删除 RadonDB Kafka 实例中的所有数据，请谨慎执行此操作。\n前提条件 已创建 RadonDB Kafka 实例。\n为避免数据丢失，请提前备份数据。\n操作步骤 删除单个实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n在 RadonDB Kafka 实例右侧点击，然后在下拉列表中选择删除。\n在删除对话框，输入 RadonDB Kafka 实例的名称，然后点击确定。\n批量删除实例 以 platform-admin 角色登录 KubeSphere 企业版 Web 控制台并进入数据库管理平台。\n在左侧导航栏选择 Kafka。\n选择需要删除的实例左侧的复选框，然后在列表上方点击删除。\n在确认删除对话框中，输入要删除的实例名称，点击确定。\n备注 请使用半角逗号（,）和空格分隔多个名称。\n","href":"/v2.0/10-radondb-kafka/13-delete-radondb-kafka/","isSection":null,"linkkey":null,"title":"删除 Kafka 实例"},{"content":"","firstChild":{"href":"/categories/","title":"Categories"},"href":"/categories/","isSection":null,"linkkey":null,"title":"RadonDB DMP 数据库管理平台"},{"content":"","firstChild":{"href":"/v2.0/01-intro/01-overview/","title":"产品概述"},"href":"/","isSection":null,"linkkey":null,"title":"RadonDB DMP 数据库管理平台"},{"content":"","firstChild":{"href":"/tags/","title":"Tags"},"href":"/tags/","isSection":null,"linkkey":null,"title":"RadonDB DMP 数据库管理平台"},{"content":"","firstChild":{"href":"/v2.0/search/","title":"搜索功能"},"href":"/v2.0/search/","isSection":null,"linkkey":null,"title":"搜索功能"}]